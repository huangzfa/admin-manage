<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duobei.core.transaction.overdue.dao.mapper.OverdueDerateRecordMapper">
  <resultMap id="BaseResultMap" type="com.duobei.core.transaction.overdue.domain.OverdueDerateRecord">
    <id column="overdue_derate_record_id" jdbcType="BIGINT" property="id" />
    <result column="overdue_derate_record_product_id" jdbcType="INTEGER" property="productId" />
    <result column="overdue_derate_record_user_id" jdbcType="BIGINT" property="userId" />
    <result column="overdue_derate_record_borrow_cash_id" jdbcType="BIGINT" property="borrowCashId" />
    <result column="overdue_derate_record_derate_amount" jdbcType="BIGINT" property="derateAmount" />
    <result column="overdue_derate_record_overdue_amount" jdbcType="BIGINT" property="overdueAmount" />
    <result column="overdue_derate_record_real_overdue_amount" jdbcType="BIGINT" property="realOverdueAmount" />
    <result column="overdue_derate_record_sum_overdue_amount" jdbcType="BIGINT" property="sumOverdueAmount" />
    <result column="overdue_derate_record_unpaid_amount" jdbcType="BIGINT" property="unpaidAmount" />
    <result column="overdue_derate_record_add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="overdue_derate_record_add_operator_id" jdbcType="INTEGER" property="addOperatorId" />
    <result column="overdue_derate_record_add_operator_name" jdbcType="VARCHAR" property="addOperatorName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    overdue_derate_record.id as overdue_derate_record_id, overdue_derate_record.product_id as overdue_derate_record_product_id, 
    overdue_derate_record.user_id as overdue_derate_record_user_id, overdue_derate_record.borrow_cash_id as overdue_derate_record_borrow_cash_id, 
    overdue_derate_record.derate_amount as overdue_derate_record_derate_amount, overdue_derate_record.overdue_amount as overdue_derate_record_overdue_amount, 
    overdue_derate_record.real_overdue_amount as overdue_derate_record_real_overdue_amount, 
    overdue_derate_record.sum_overdue_amount as overdue_derate_record_sum_overdue_amount, 
    overdue_derate_record.unpaid_amount as overdue_derate_record_unpaid_amount, overdue_derate_record.add_time as overdue_derate_record_add_time, 
    overdue_derate_record.add_operator_id as overdue_derate_record_add_operator_id, overdue_derate_record.add_operator_name as overdue_derate_record_add_operator_name
  </sql>
  <select id="selectByExample" parameterType="com.duobei.core.transaction.overdue.domain.OverdueDerateRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tt_overdue_derate_record overdue_derate_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tt_overdue_derate_record overdue_derate_record
    where overdue_derate_record.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tt_overdue_derate_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duobei.core.transaction.overdue.domain.OverdueDerateRecordExample">
    delete from tt_overdue_derate_record overdue_derate_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duobei.core.transaction.overdue.domain.OverdueDerateRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_overdue_derate_record (product_id, user_id, borrow_cash_id, 
      derate_amount, overdue_amount, real_overdue_amount, 
      sum_overdue_amount, unpaid_amount, add_time, 
      add_operator_id, add_operator_name)
    values (#{productId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{borrowCashId,jdbcType=BIGINT}, 
      #{derateAmount,jdbcType=BIGINT}, #{overdueAmount,jdbcType=BIGINT}, #{realOverdueAmount,jdbcType=BIGINT}, 
      #{sumOverdueAmount,jdbcType=BIGINT}, #{unpaidAmount,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP}, 
      #{addOperatorId,jdbcType=INTEGER}, #{addOperatorName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.duobei.core.transaction.overdue.domain.OverdueDerateRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_overdue_derate_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="borrowCashId != null">
        borrow_cash_id,
      </if>
      <if test="derateAmount != null">
        derate_amount,
      </if>
      <if test="overdueAmount != null">
        overdue_amount,
      </if>
      <if test="realOverdueAmount != null">
        real_overdue_amount,
      </if>
      <if test="sumOverdueAmount != null">
        sum_overdue_amount,
      </if>
      <if test="unpaidAmount != null">
        unpaid_amount,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="addOperatorId != null">
        add_operator_id,
      </if>
      <if test="addOperatorName != null">
        add_operator_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="borrowCashId != null">
        #{borrowCashId,jdbcType=BIGINT},
      </if>
      <if test="derateAmount != null">
        #{derateAmount,jdbcType=BIGINT},
      </if>
      <if test="overdueAmount != null">
        #{overdueAmount,jdbcType=BIGINT},
      </if>
      <if test="realOverdueAmount != null">
        #{realOverdueAmount,jdbcType=BIGINT},
      </if>
      <if test="sumOverdueAmount != null">
        #{sumOverdueAmount,jdbcType=BIGINT},
      </if>
      <if test="unpaidAmount != null">
        #{unpaidAmount,jdbcType=BIGINT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addOperatorId != null">
        #{addOperatorId,jdbcType=INTEGER},
      </if>
      <if test="addOperatorName != null">
        #{addOperatorName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duobei.core.transaction.overdue.domain.OverdueDerateRecordExample" resultType="java.lang.Long">
    select count(*) from tt_overdue_derate_record overdue_derate_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tt_overdue_derate_record overdue_derate_record
    <set>
      <if test="record.id != null">
        overdue_derate_record.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        overdue_derate_record.product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        overdue_derate_record.user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.borrowCashId != null">
        overdue_derate_record.borrow_cash_id = #{record.borrowCashId,jdbcType=BIGINT},
      </if>
      <if test="record.derateAmount != null">
        overdue_derate_record.derate_amount = #{record.derateAmount,jdbcType=BIGINT},
      </if>
      <if test="record.overdueAmount != null">
        overdue_derate_record.overdue_amount = #{record.overdueAmount,jdbcType=BIGINT},
      </if>
      <if test="record.realOverdueAmount != null">
        overdue_derate_record.real_overdue_amount = #{record.realOverdueAmount,jdbcType=BIGINT},
      </if>
      <if test="record.sumOverdueAmount != null">
        overdue_derate_record.sum_overdue_amount = #{record.sumOverdueAmount,jdbcType=BIGINT},
      </if>
      <if test="record.unpaidAmount != null">
        overdue_derate_record.unpaid_amount = #{record.unpaidAmount,jdbcType=BIGINT},
      </if>
      <if test="record.addTime != null">
        overdue_derate_record.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addOperatorId != null">
        overdue_derate_record.add_operator_id = #{record.addOperatorId,jdbcType=INTEGER},
      </if>
      <if test="record.addOperatorName != null">
        overdue_derate_record.add_operator_name = #{record.addOperatorName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tt_overdue_derate_record overdue_derate_record
    set overdue_derate_record.id = #{record.id,jdbcType=BIGINT},
      overdue_derate_record.product_id = #{record.productId,jdbcType=INTEGER},
      overdue_derate_record.user_id = #{record.userId,jdbcType=BIGINT},
      overdue_derate_record.borrow_cash_id = #{record.borrowCashId,jdbcType=BIGINT},
      overdue_derate_record.derate_amount = #{record.derateAmount,jdbcType=BIGINT},
      overdue_derate_record.overdue_amount = #{record.overdueAmount,jdbcType=BIGINT},
      overdue_derate_record.real_overdue_amount = #{record.realOverdueAmount,jdbcType=BIGINT},
      overdue_derate_record.sum_overdue_amount = #{record.sumOverdueAmount,jdbcType=BIGINT},
      overdue_derate_record.unpaid_amount = #{record.unpaidAmount,jdbcType=BIGINT},
      overdue_derate_record.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      overdue_derate_record.add_operator_id = #{record.addOperatorId,jdbcType=INTEGER},
      overdue_derate_record.add_operator_name = #{record.addOperatorName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duobei.core.transaction.overdue.domain.OverdueDerateRecord">
    update tt_overdue_derate_record
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="borrowCashId != null">
        borrow_cash_id = #{borrowCashId,jdbcType=BIGINT},
      </if>
      <if test="derateAmount != null">
        derate_amount = #{derateAmount,jdbcType=BIGINT},
      </if>
      <if test="overdueAmount != null">
        overdue_amount = #{overdueAmount,jdbcType=BIGINT},
      </if>
      <if test="realOverdueAmount != null">
        real_overdue_amount = #{realOverdueAmount,jdbcType=BIGINT},
      </if>
      <if test="sumOverdueAmount != null">
        sum_overdue_amount = #{sumOverdueAmount,jdbcType=BIGINT},
      </if>
      <if test="unpaidAmount != null">
        unpaid_amount = #{unpaidAmount,jdbcType=BIGINT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addOperatorId != null">
        add_operator_id = #{addOperatorId,jdbcType=INTEGER},
      </if>
      <if test="addOperatorName != null">
        add_operator_name = #{addOperatorName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duobei.core.transaction.overdue.domain.OverdueDerateRecord">
    update tt_overdue_derate_record
    set product_id = #{productId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      borrow_cash_id = #{borrowCashId,jdbcType=BIGINT},
      derate_amount = #{derateAmount,jdbcType=BIGINT},
      overdue_amount = #{overdueAmount,jdbcType=BIGINT},
      real_overdue_amount = #{realOverdueAmount,jdbcType=BIGINT},
      sum_overdue_amount = #{sumOverdueAmount,jdbcType=BIGINT},
      unpaid_amount = #{unpaidAmount,jdbcType=BIGINT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      add_operator_id = #{addOperatorId,jdbcType=INTEGER},
      add_operator_name = #{addOperatorName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>