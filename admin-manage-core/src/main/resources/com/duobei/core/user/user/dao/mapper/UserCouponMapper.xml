<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duobei.core.user.user.dao.mapper.UserCouponMapper">
  <resultMap id="BaseResultMap" type="com.duobei.core.user.user.domain.UserCoupon">
    <id column="ucoupon_id" jdbcType="BIGINT" property="id" />
    <result column="ucoupon_product_id" jdbcType="INTEGER" property="productId" />
    <result column="ucoupon_user_id" jdbcType="BIGINT" property="userId" />
    <result column="ucoupon_coupon_id" jdbcType="INTEGER" property="couponId" />
    <result column="ucoupon_coupon_type" jdbcType="VARCHAR" property="couponType" />
    <result column="ucoupon_state" jdbcType="TINYINT" property="state" />
    <result column="ucoupon_time_flag" jdbcType="BIT" property="timeFlag" />
    <result column="ucoupon_start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="ucoupon_end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="ucoupon_used_time" jdbcType="TIMESTAMP" property="usedTime" />
    <result column="ucoupon_from_type" jdbcType="VARCHAR" property="fromType" />
    <result column="ucoupon_from_ref" jdbcType="VARCHAR" property="fromRef" />
    <result column="ucoupon_add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="ucoupon_modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="ucoupon_is_delete" jdbcType="BIGINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ucoupon.id as ucoupon_id, ucoupon.product_id as ucoupon_product_id, ucoupon.user_id as ucoupon_user_id, 
    ucoupon.coupon_id as ucoupon_coupon_id, ucoupon.coupon_type as ucoupon_coupon_type, 
    ucoupon.state as ucoupon_state, ucoupon.time_flag as ucoupon_time_flag, ucoupon.start_time as ucoupon_start_time, 
    ucoupon.end_time as ucoupon_end_time, ucoupon.used_time as ucoupon_used_time, ucoupon.from_type as ucoupon_from_type, 
    ucoupon.from_ref as ucoupon_from_ref, ucoupon.add_time as ucoupon_add_time, ucoupon.modify_time as ucoupon_modify_time, 
    ucoupon.is_delete as ucoupon_is_delete
  </sql>
  <select id="selectByExample" parameterType="com.duobei.core.user.user.domain.UserCouponExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pgy_user_coupon ucoupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pgy_user_coupon ucoupon
    where ucoupon.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pgy_user_coupon
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duobei.core.user.user.domain.UserCouponExample">
    delete from pgy_user_coupon ucoupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duobei.core.user.user.domain.UserCoupon">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pgy_user_coupon (product_id, user_id, coupon_id, 
      coupon_type, state, time_flag, 
      start_time, end_time, used_time, 
      from_type, from_ref, add_time, 
      modify_time, is_delete)
    values (#{productId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{couponId,jdbcType=INTEGER}, 
      #{couponType,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, #{timeFlag,jdbcType=BIT}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{usedTime,jdbcType=TIMESTAMP}, 
      #{fromType,jdbcType=VARCHAR}, #{fromRef,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.duobei.core.user.user.domain.UserCoupon">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pgy_user_coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="couponType != null">
        coupon_type,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="timeFlag != null">
        time_flag,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="usedTime != null">
        used_time,
      </if>
      <if test="fromType != null">
        from_type,
      </if>
      <if test="fromRef != null">
        from_ref,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=INTEGER},
      </if>
      <if test="couponType != null">
        #{couponType,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="timeFlag != null">
        #{timeFlag,jdbcType=BIT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="usedTime != null">
        #{usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromType != null">
        #{fromType,jdbcType=VARCHAR},
      </if>
      <if test="fromRef != null">
        #{fromRef,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duobei.core.user.user.domain.UserCouponExample" resultType="java.lang.Long">
    select count(*) from pgy_user_coupon ucoupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pgy_user_coupon ucoupon
    <set>
      <if test="record.id != null">
        ucoupon.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        ucoupon.product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        ucoupon.user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.couponId != null">
        ucoupon.coupon_id = #{record.couponId,jdbcType=INTEGER},
      </if>
      <if test="record.couponType != null">
        ucoupon.coupon_type = #{record.couponType,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        ucoupon.state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.timeFlag != null">
        ucoupon.time_flag = #{record.timeFlag,jdbcType=BIT},
      </if>
      <if test="record.startTime != null">
        ucoupon.start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        ucoupon.end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.usedTime != null">
        ucoupon.used_time = #{record.usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fromType != null">
        ucoupon.from_type = #{record.fromType,jdbcType=VARCHAR},
      </if>
      <if test="record.fromRef != null">
        ucoupon.from_ref = #{record.fromRef,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        ucoupon.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        ucoupon.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        ucoupon.is_delete = #{record.isDelete,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pgy_user_coupon ucoupon
    set ucoupon.id = #{record.id,jdbcType=BIGINT},
      ucoupon.product_id = #{record.productId,jdbcType=INTEGER},
      ucoupon.user_id = #{record.userId,jdbcType=BIGINT},
      ucoupon.coupon_id = #{record.couponId,jdbcType=INTEGER},
      ucoupon.coupon_type = #{record.couponType,jdbcType=VARCHAR},
      ucoupon.state = #{record.state,jdbcType=TINYINT},
      ucoupon.time_flag = #{record.timeFlag,jdbcType=BIT},
      ucoupon.start_time = #{record.startTime,jdbcType=TIMESTAMP},
      ucoupon.end_time = #{record.endTime,jdbcType=TIMESTAMP},
      ucoupon.used_time = #{record.usedTime,jdbcType=TIMESTAMP},
      ucoupon.from_type = #{record.fromType,jdbcType=VARCHAR},
      ucoupon.from_ref = #{record.fromRef,jdbcType=VARCHAR},
      ucoupon.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      ucoupon.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      ucoupon.is_delete = #{record.isDelete,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duobei.core.user.user.domain.UserCoupon">
    update pgy_user_coupon
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=INTEGER},
      </if>
      <if test="couponType != null">
        coupon_type = #{couponType,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="timeFlag != null">
        time_flag = #{timeFlag,jdbcType=BIT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="usedTime != null">
        used_time = #{usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromType != null">
        from_type = #{fromType,jdbcType=VARCHAR},
      </if>
      <if test="fromRef != null">
        from_ref = #{fromRef,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duobei.core.user.user.domain.UserCoupon">
    update pgy_user_coupon
    set product_id = #{productId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      coupon_id = #{couponId,jdbcType=INTEGER},
      coupon_type = #{couponType,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      time_flag = #{timeFlag,jdbcType=BIT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      used_time = #{usedTime,jdbcType=TIMESTAMP},
      from_type = #{fromType,jdbcType=VARCHAR},
      from_ref = #{fromRef,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>