<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duobei.core.user.user.dao.mapper.UserAccountMapper">
  <resultMap id="BaseResultMap" type="com.duobei.core.user.user.domain.UserAccount">
    <id column="uaccount_id" jdbcType="BIGINT" property="id" />
    <result column="uaccount_product_id" jdbcType="INTEGER" property="productId" />
    <result column="uaccount_user_id" jdbcType="BIGINT" property="userId" />
    <result column="uaccount_au_amount" jdbcType="BIGINT" property="auAmount" />
    <result column="uaccount_used_amount" jdbcType="BIGINT" property="usedAmount" />
    <result column="uaccount_activity_amount" jdbcType="BIGINT" property="activityAmount" />
    <result column="uaccount_rebate_amount" jdbcType="BIGINT" property="rebateAmount" />
    <result column="uaccount_day_rate" jdbcType="DECIMAL" property="dayRate" />
    <result column="uaccount_pay_pwd" jdbcType="VARCHAR" property="payPwd" />
    <result column="uaccount_salt" jdbcType="VARCHAR" property="salt" />
    <result column="uaccount_pwd_fail_count" jdbcType="TINYINT" property="pwdFailCount" />
    <result column="uaccount_pwd_fail_day" jdbcType="INTEGER" property="pwdFailDay" />
    <result column="uaccount_add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="uaccount_modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="uaccount_is_delete" jdbcType="BIGINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uaccount.id as uaccount_id, uaccount.product_id as uaccount_product_id, uaccount.user_id as uaccount_user_id, 
    uaccount.au_amount as uaccount_au_amount, uaccount.used_amount as uaccount_used_amount, 
    uaccount.activity_amount as uaccount_activity_amount, uaccount.rebate_amount as uaccount_rebate_amount, 
    uaccount.day_rate as uaccount_day_rate, uaccount.pay_pwd as uaccount_pay_pwd, uaccount.salt as uaccount_salt, 
    uaccount.pwd_fail_count as uaccount_pwd_fail_count, uaccount.pwd_fail_day as uaccount_pwd_fail_day, 
    uaccount.add_time as uaccount_add_time, uaccount.modify_time as uaccount_modify_time, 
    uaccount.is_delete as uaccount_is_delete
  </sql>
  <select id="selectByExample" parameterType="com.duobei.core.user.user.domain.UserAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pgy_user_account uaccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pgy_user_account uaccount
    where uaccount.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pgy_user_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duobei.core.user.user.domain.UserAccountExample">
    delete from pgy_user_account uaccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duobei.core.user.user.domain.UserAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pgy_user_account (product_id, user_id, au_amount, 
      used_amount, activity_amount, rebate_amount, 
      day_rate, pay_pwd, salt, 
      pwd_fail_count, pwd_fail_day, add_time, 
      modify_time, is_delete)
    values (#{productId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{auAmount,jdbcType=BIGINT}, 
      #{usedAmount,jdbcType=BIGINT}, #{activityAmount,jdbcType=BIGINT}, #{rebateAmount,jdbcType=BIGINT}, 
      #{dayRate,jdbcType=DECIMAL}, #{payPwd,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{pwdFailCount,jdbcType=TINYINT}, #{pwdFailDay,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.duobei.core.user.user.domain.UserAccount">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pgy_user_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="auAmount != null">
        au_amount,
      </if>
      <if test="usedAmount != null">
        used_amount,
      </if>
      <if test="activityAmount != null">
        activity_amount,
      </if>
      <if test="rebateAmount != null">
        rebate_amount,
      </if>
      <if test="dayRate != null">
        day_rate,
      </if>
      <if test="payPwd != null">
        pay_pwd,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="pwdFailCount != null">
        pwd_fail_count,
      </if>
      <if test="pwdFailDay != null">
        pwd_fail_day,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="auAmount != null">
        #{auAmount,jdbcType=BIGINT},
      </if>
      <if test="usedAmount != null">
        #{usedAmount,jdbcType=BIGINT},
      </if>
      <if test="activityAmount != null">
        #{activityAmount,jdbcType=BIGINT},
      </if>
      <if test="rebateAmount != null">
        #{rebateAmount,jdbcType=BIGINT},
      </if>
      <if test="dayRate != null">
        #{dayRate,jdbcType=DECIMAL},
      </if>
      <if test="payPwd != null">
        #{payPwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="pwdFailCount != null">
        #{pwdFailCount,jdbcType=TINYINT},
      </if>
      <if test="pwdFailDay != null">
        #{pwdFailDay,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duobei.core.user.user.domain.UserAccountExample" resultType="java.lang.Long">
    select count(*) from pgy_user_account uaccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pgy_user_account uaccount
    <set>
      <if test="record.id != null">
        uaccount.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        uaccount.product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        uaccount.user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.auAmount != null">
        uaccount.au_amount = #{record.auAmount,jdbcType=BIGINT},
      </if>
      <if test="record.usedAmount != null">
        uaccount.used_amount = #{record.usedAmount,jdbcType=BIGINT},
      </if>
      <if test="record.activityAmount != null">
        uaccount.activity_amount = #{record.activityAmount,jdbcType=BIGINT},
      </if>
      <if test="record.rebateAmount != null">
        uaccount.rebate_amount = #{record.rebateAmount,jdbcType=BIGINT},
      </if>
      <if test="record.dayRate != null">
        uaccount.day_rate = #{record.dayRate,jdbcType=DECIMAL},
      </if>
      <if test="record.payPwd != null">
        uaccount.pay_pwd = #{record.payPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        uaccount.salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.pwdFailCount != null">
        uaccount.pwd_fail_count = #{record.pwdFailCount,jdbcType=TINYINT},
      </if>
      <if test="record.pwdFailDay != null">
        uaccount.pwd_fail_day = #{record.pwdFailDay,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        uaccount.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        uaccount.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        uaccount.is_delete = #{record.isDelete,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pgy_user_account uaccount
    set uaccount.id = #{record.id,jdbcType=BIGINT},
      uaccount.product_id = #{record.productId,jdbcType=INTEGER},
      uaccount.user_id = #{record.userId,jdbcType=BIGINT},
      uaccount.au_amount = #{record.auAmount,jdbcType=BIGINT},
      uaccount.used_amount = #{record.usedAmount,jdbcType=BIGINT},
      uaccount.activity_amount = #{record.activityAmount,jdbcType=BIGINT},
      uaccount.rebate_amount = #{record.rebateAmount,jdbcType=BIGINT},
      uaccount.day_rate = #{record.dayRate,jdbcType=DECIMAL},
      uaccount.pay_pwd = #{record.payPwd,jdbcType=VARCHAR},
      uaccount.salt = #{record.salt,jdbcType=VARCHAR},
      uaccount.pwd_fail_count = #{record.pwdFailCount,jdbcType=TINYINT},
      uaccount.pwd_fail_day = #{record.pwdFailDay,jdbcType=INTEGER},
      uaccount.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      uaccount.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      uaccount.is_delete = #{record.isDelete,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duobei.core.user.user.domain.UserAccount">
    update pgy_user_account
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="auAmount != null">
        au_amount = #{auAmount,jdbcType=BIGINT},
      </if>
      <if test="usedAmount != null">
        used_amount = #{usedAmount,jdbcType=BIGINT},
      </if>
      <if test="activityAmount != null">
        activity_amount = #{activityAmount,jdbcType=BIGINT},
      </if>
      <if test="rebateAmount != null">
        rebate_amount = #{rebateAmount,jdbcType=BIGINT},
      </if>
      <if test="dayRate != null">
        day_rate = #{dayRate,jdbcType=DECIMAL},
      </if>
      <if test="payPwd != null">
        pay_pwd = #{payPwd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="pwdFailCount != null">
        pwd_fail_count = #{pwdFailCount,jdbcType=TINYINT},
      </if>
      <if test="pwdFailDay != null">
        pwd_fail_day = #{pwdFailDay,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duobei.core.user.user.domain.UserAccount">
    update pgy_user_account
    set product_id = #{productId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      au_amount = #{auAmount,jdbcType=BIGINT},
      used_amount = #{usedAmount,jdbcType=BIGINT},
      activity_amount = #{activityAmount,jdbcType=BIGINT},
      rebate_amount = #{rebateAmount,jdbcType=BIGINT},
      day_rate = #{dayRate,jdbcType=DECIMAL},
      pay_pwd = #{payPwd,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      pwd_fail_count = #{pwdFailCount,jdbcType=TINYINT},
      pwd_fail_day = #{pwdFailDay,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>