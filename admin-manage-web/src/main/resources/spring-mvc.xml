<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<context:property-placeholder location="classpath:global.properties" ignore-unresolvable="true"/>  
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller,Use-dafault-filters=”false”的情况下：<context:exclude-filter>指定的不扫描，<context:include-filter>指定的扫描-->
	<context:component-scan base-package="com.duobei.console" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>  
	</context:component-scan>
	
	<mvc:annotation-driven>  
	    <mvc:message-converters>  
	        <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
	            <property name="supportedMediaTypes">  
	                <list>  
	                    <value>text/plain;charset=UTF-8</value>  
	                    <value>application/json;charset=UTF-8</value>
	                </list>  
	            </property>  
	        </bean>  
	        
	        <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">  
	            <property name="supportedMediaTypes">  
	                <list>
	                     <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
	                     <value>text/html;charset=UTF-8</value>
	                     <value>application/json;charset=UTF-8</value>
	                </list>
	            </property>
	            <!-- 
	            <property name="serializerFeature">
	                <array>
	                    <value>WriteMapNullValue</value>
	                    <value>QuoteFieldNames</value>
	                </array>
	            </property>
	             -->
	        </bean>  
	    </mvc:message-converters>  
	</mvc:annotation-driven>  
	<!-- 对静态资源文件的访问  二选一  -->  
	<mvc:default-servlet-handler/>
	<!-- 对静态资源文件的访问  二选一
	<mvc:resources location="/res/" mapping="/res/**" cache-period="31536000"/> 
	-->   
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:${indexPath}"/>
	
	<!-- Spring MVC ViewResolver -->  
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <!-- 当controller返回的页面有jsp、html等多种格式时，suffix可以去掉，在controller返回的ModelAndView写为xxx.jsp或xxx.html -->
        <property name="suffix" value=".jsp" />
    </bean>
    
	
    <!--File Upload 去除spring支持的文件上传就可以用原生的方式结合apache.commons.fileupload做文件上传-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	  <property name="defaultEncoding" value="utf-8"></property>
	  <property name="maxUploadSize" value="10485760"></property>
	  <property name="maxInMemorySize" value="10240"></property>
	</bean>

	<!-- 支持 Shiro对Controller的AOP安全控制  begin -->
    <aop:config proxy-target-class="true"></aop:config>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- Shiro 抛出权限校验异常处理 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 无执行权限异常捕获 -->
                <prop key="org.apache.shiro.authz.UnauthorizedException">forward:/error/unauthorized</prop>
                <!-- 无执行角色异常捕获 -->
                <prop key="org.apache.shiro.authz.UnauthenticatedException">forward:/error/unauthorized</prop>
            </props>
        </property>
    </bean>
    <!-- 支持 Shiro对Controller的AOP安全控制  end -->
</beans>