package com.duobei.core.user.user.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserAccountExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    public UserAccountExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("uaccount.id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("uaccount.id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("uaccount.id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("uaccount.id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("uaccount.id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("uaccount.id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("uaccount.id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("uaccount.id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("uaccount.id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("uaccount.id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("uaccount.id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("uaccount.id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNull() {
            addCriterion("uaccount.product_id is null");
            return (Criteria) this;
        }

        public Criteria andProductIdIsNotNull() {
            addCriterion("uaccount.product_id is not null");
            return (Criteria) this;
        }

        public Criteria andProductIdEqualTo(Integer value) {
            addCriterion("uaccount.product_id =", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotEqualTo(Integer value) {
            addCriterion("uaccount.product_id <>", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThan(Integer value) {
            addCriterion("uaccount.product_id >", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("uaccount.product_id >=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThan(Integer value) {
            addCriterion("uaccount.product_id <", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdLessThanOrEqualTo(Integer value) {
            addCriterion("uaccount.product_id <=", value, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdIn(List<Integer> values) {
            addCriterion("uaccount.product_id in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotIn(List<Integer> values) {
            addCriterion("uaccount.product_id not in", values, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdBetween(Integer value1, Integer value2) {
            addCriterion("uaccount.product_id between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andProductIdNotBetween(Integer value1, Integer value2) {
            addCriterion("uaccount.product_id not between", value1, value2, "productId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("uaccount.user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("uaccount.user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("uaccount.user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("uaccount.user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("uaccount.user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("uaccount.user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("uaccount.user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("uaccount.user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("uaccount.user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("uaccount.user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("uaccount.user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("uaccount.user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andAuAmountIsNull() {
            addCriterion("uaccount.au_amount is null");
            return (Criteria) this;
        }

        public Criteria andAuAmountIsNotNull() {
            addCriterion("uaccount.au_amount is not null");
            return (Criteria) this;
        }

        public Criteria andAuAmountEqualTo(Long value) {
            addCriterion("uaccount.au_amount =", value, "auAmount");
            return (Criteria) this;
        }

        public Criteria andAuAmountNotEqualTo(Long value) {
            addCriterion("uaccount.au_amount <>", value, "auAmount");
            return (Criteria) this;
        }

        public Criteria andAuAmountGreaterThan(Long value) {
            addCriterion("uaccount.au_amount >", value, "auAmount");
            return (Criteria) this;
        }

        public Criteria andAuAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("uaccount.au_amount >=", value, "auAmount");
            return (Criteria) this;
        }

        public Criteria andAuAmountLessThan(Long value) {
            addCriterion("uaccount.au_amount <", value, "auAmount");
            return (Criteria) this;
        }

        public Criteria andAuAmountLessThanOrEqualTo(Long value) {
            addCriterion("uaccount.au_amount <=", value, "auAmount");
            return (Criteria) this;
        }

        public Criteria andAuAmountIn(List<Long> values) {
            addCriterion("uaccount.au_amount in", values, "auAmount");
            return (Criteria) this;
        }

        public Criteria andAuAmountNotIn(List<Long> values) {
            addCriterion("uaccount.au_amount not in", values, "auAmount");
            return (Criteria) this;
        }

        public Criteria andAuAmountBetween(Long value1, Long value2) {
            addCriterion("uaccount.au_amount between", value1, value2, "auAmount");
            return (Criteria) this;
        }

        public Criteria andAuAmountNotBetween(Long value1, Long value2) {
            addCriterion("uaccount.au_amount not between", value1, value2, "auAmount");
            return (Criteria) this;
        }

        public Criteria andUsedAmountIsNull() {
            addCriterion("uaccount.used_amount is null");
            return (Criteria) this;
        }

        public Criteria andUsedAmountIsNotNull() {
            addCriterion("uaccount.used_amount is not null");
            return (Criteria) this;
        }

        public Criteria andUsedAmountEqualTo(Long value) {
            addCriterion("uaccount.used_amount =", value, "usedAmount");
            return (Criteria) this;
        }

        public Criteria andUsedAmountNotEqualTo(Long value) {
            addCriterion("uaccount.used_amount <>", value, "usedAmount");
            return (Criteria) this;
        }

        public Criteria andUsedAmountGreaterThan(Long value) {
            addCriterion("uaccount.used_amount >", value, "usedAmount");
            return (Criteria) this;
        }

        public Criteria andUsedAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("uaccount.used_amount >=", value, "usedAmount");
            return (Criteria) this;
        }

        public Criteria andUsedAmountLessThan(Long value) {
            addCriterion("uaccount.used_amount <", value, "usedAmount");
            return (Criteria) this;
        }

        public Criteria andUsedAmountLessThanOrEqualTo(Long value) {
            addCriterion("uaccount.used_amount <=", value, "usedAmount");
            return (Criteria) this;
        }

        public Criteria andUsedAmountIn(List<Long> values) {
            addCriterion("uaccount.used_amount in", values, "usedAmount");
            return (Criteria) this;
        }

        public Criteria andUsedAmountNotIn(List<Long> values) {
            addCriterion("uaccount.used_amount not in", values, "usedAmount");
            return (Criteria) this;
        }

        public Criteria andUsedAmountBetween(Long value1, Long value2) {
            addCriterion("uaccount.used_amount between", value1, value2, "usedAmount");
            return (Criteria) this;
        }

        public Criteria andUsedAmountNotBetween(Long value1, Long value2) {
            addCriterion("uaccount.used_amount not between", value1, value2, "usedAmount");
            return (Criteria) this;
        }

        public Criteria andActivityAmountIsNull() {
            addCriterion("uaccount.activity_amount is null");
            return (Criteria) this;
        }

        public Criteria andActivityAmountIsNotNull() {
            addCriterion("uaccount.activity_amount is not null");
            return (Criteria) this;
        }

        public Criteria andActivityAmountEqualTo(Long value) {
            addCriterion("uaccount.activity_amount =", value, "activityAmount");
            return (Criteria) this;
        }

        public Criteria andActivityAmountNotEqualTo(Long value) {
            addCriterion("uaccount.activity_amount <>", value, "activityAmount");
            return (Criteria) this;
        }

        public Criteria andActivityAmountGreaterThan(Long value) {
            addCriterion("uaccount.activity_amount >", value, "activityAmount");
            return (Criteria) this;
        }

        public Criteria andActivityAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("uaccount.activity_amount >=", value, "activityAmount");
            return (Criteria) this;
        }

        public Criteria andActivityAmountLessThan(Long value) {
            addCriterion("uaccount.activity_amount <", value, "activityAmount");
            return (Criteria) this;
        }

        public Criteria andActivityAmountLessThanOrEqualTo(Long value) {
            addCriterion("uaccount.activity_amount <=", value, "activityAmount");
            return (Criteria) this;
        }

        public Criteria andActivityAmountIn(List<Long> values) {
            addCriterion("uaccount.activity_amount in", values, "activityAmount");
            return (Criteria) this;
        }

        public Criteria andActivityAmountNotIn(List<Long> values) {
            addCriterion("uaccount.activity_amount not in", values, "activityAmount");
            return (Criteria) this;
        }

        public Criteria andActivityAmountBetween(Long value1, Long value2) {
            addCriterion("uaccount.activity_amount between", value1, value2, "activityAmount");
            return (Criteria) this;
        }

        public Criteria andActivityAmountNotBetween(Long value1, Long value2) {
            addCriterion("uaccount.activity_amount not between", value1, value2, "activityAmount");
            return (Criteria) this;
        }

        public Criteria andRebateAmountIsNull() {
            addCriterion("uaccount.rebate_amount is null");
            return (Criteria) this;
        }

        public Criteria andRebateAmountIsNotNull() {
            addCriterion("uaccount.rebate_amount is not null");
            return (Criteria) this;
        }

        public Criteria andRebateAmountEqualTo(Long value) {
            addCriterion("uaccount.rebate_amount =", value, "rebateAmount");
            return (Criteria) this;
        }

        public Criteria andRebateAmountNotEqualTo(Long value) {
            addCriterion("uaccount.rebate_amount <>", value, "rebateAmount");
            return (Criteria) this;
        }

        public Criteria andRebateAmountGreaterThan(Long value) {
            addCriterion("uaccount.rebate_amount >", value, "rebateAmount");
            return (Criteria) this;
        }

        public Criteria andRebateAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("uaccount.rebate_amount >=", value, "rebateAmount");
            return (Criteria) this;
        }

        public Criteria andRebateAmountLessThan(Long value) {
            addCriterion("uaccount.rebate_amount <", value, "rebateAmount");
            return (Criteria) this;
        }

        public Criteria andRebateAmountLessThanOrEqualTo(Long value) {
            addCriterion("uaccount.rebate_amount <=", value, "rebateAmount");
            return (Criteria) this;
        }

        public Criteria andRebateAmountIn(List<Long> values) {
            addCriterion("uaccount.rebate_amount in", values, "rebateAmount");
            return (Criteria) this;
        }

        public Criteria andRebateAmountNotIn(List<Long> values) {
            addCriterion("uaccount.rebate_amount not in", values, "rebateAmount");
            return (Criteria) this;
        }

        public Criteria andRebateAmountBetween(Long value1, Long value2) {
            addCriterion("uaccount.rebate_amount between", value1, value2, "rebateAmount");
            return (Criteria) this;
        }

        public Criteria andRebateAmountNotBetween(Long value1, Long value2) {
            addCriterion("uaccount.rebate_amount not between", value1, value2, "rebateAmount");
            return (Criteria) this;
        }

        public Criteria andDayRateIsNull() {
            addCriterion("uaccount.day_rate is null");
            return (Criteria) this;
        }

        public Criteria andDayRateIsNotNull() {
            addCriterion("uaccount.day_rate is not null");
            return (Criteria) this;
        }

        public Criteria andDayRateEqualTo(BigDecimal value) {
            addCriterion("uaccount.day_rate =", value, "dayRate");
            return (Criteria) this;
        }

        public Criteria andDayRateNotEqualTo(BigDecimal value) {
            addCriterion("uaccount.day_rate <>", value, "dayRate");
            return (Criteria) this;
        }

        public Criteria andDayRateGreaterThan(BigDecimal value) {
            addCriterion("uaccount.day_rate >", value, "dayRate");
            return (Criteria) this;
        }

        public Criteria andDayRateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("uaccount.day_rate >=", value, "dayRate");
            return (Criteria) this;
        }

        public Criteria andDayRateLessThan(BigDecimal value) {
            addCriterion("uaccount.day_rate <", value, "dayRate");
            return (Criteria) this;
        }

        public Criteria andDayRateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("uaccount.day_rate <=", value, "dayRate");
            return (Criteria) this;
        }

        public Criteria andDayRateIn(List<BigDecimal> values) {
            addCriterion("uaccount.day_rate in", values, "dayRate");
            return (Criteria) this;
        }

        public Criteria andDayRateNotIn(List<BigDecimal> values) {
            addCriterion("uaccount.day_rate not in", values, "dayRate");
            return (Criteria) this;
        }

        public Criteria andDayRateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("uaccount.day_rate between", value1, value2, "dayRate");
            return (Criteria) this;
        }

        public Criteria andDayRateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("uaccount.day_rate not between", value1, value2, "dayRate");
            return (Criteria) this;
        }

        public Criteria andPayPwdIsNull() {
            addCriterion("uaccount.pay_pwd is null");
            return (Criteria) this;
        }

        public Criteria andPayPwdIsNotNull() {
            addCriterion("uaccount.pay_pwd is not null");
            return (Criteria) this;
        }

        public Criteria andPayPwdEqualTo(String value) {
            addCriterion("uaccount.pay_pwd =", value, "payPwd");
            return (Criteria) this;
        }

        public Criteria andPayPwdNotEqualTo(String value) {
            addCriterion("uaccount.pay_pwd <>", value, "payPwd");
            return (Criteria) this;
        }

        public Criteria andPayPwdGreaterThan(String value) {
            addCriterion("uaccount.pay_pwd >", value, "payPwd");
            return (Criteria) this;
        }

        public Criteria andPayPwdGreaterThanOrEqualTo(String value) {
            addCriterion("uaccount.pay_pwd >=", value, "payPwd");
            return (Criteria) this;
        }

        public Criteria andPayPwdLessThan(String value) {
            addCriterion("uaccount.pay_pwd <", value, "payPwd");
            return (Criteria) this;
        }

        public Criteria andPayPwdLessThanOrEqualTo(String value) {
            addCriterion("uaccount.pay_pwd <=", value, "payPwd");
            return (Criteria) this;
        }

        public Criteria andPayPwdLike(String value) {
            addCriterion("uaccount.pay_pwd like", value, "payPwd");
            return (Criteria) this;
        }

        public Criteria andPayPwdNotLike(String value) {
            addCriterion("uaccount.pay_pwd not like", value, "payPwd");
            return (Criteria) this;
        }

        public Criteria andPayPwdIn(List<String> values) {
            addCriterion("uaccount.pay_pwd in", values, "payPwd");
            return (Criteria) this;
        }

        public Criteria andPayPwdNotIn(List<String> values) {
            addCriterion("uaccount.pay_pwd not in", values, "payPwd");
            return (Criteria) this;
        }

        public Criteria andPayPwdBetween(String value1, String value2) {
            addCriterion("uaccount.pay_pwd between", value1, value2, "payPwd");
            return (Criteria) this;
        }

        public Criteria andPayPwdNotBetween(String value1, String value2) {
            addCriterion("uaccount.pay_pwd not between", value1, value2, "payPwd");
            return (Criteria) this;
        }

        public Criteria andSaltIsNull() {
            addCriterion("uaccount.salt is null");
            return (Criteria) this;
        }

        public Criteria andSaltIsNotNull() {
            addCriterion("uaccount.salt is not null");
            return (Criteria) this;
        }

        public Criteria andSaltEqualTo(String value) {
            addCriterion("uaccount.salt =", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotEqualTo(String value) {
            addCriterion("uaccount.salt <>", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltGreaterThan(String value) {
            addCriterion("uaccount.salt >", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltGreaterThanOrEqualTo(String value) {
            addCriterion("uaccount.salt >=", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltLessThan(String value) {
            addCriterion("uaccount.salt <", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltLessThanOrEqualTo(String value) {
            addCriterion("uaccount.salt <=", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltLike(String value) {
            addCriterion("uaccount.salt like", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotLike(String value) {
            addCriterion("uaccount.salt not like", value, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltIn(List<String> values) {
            addCriterion("uaccount.salt in", values, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotIn(List<String> values) {
            addCriterion("uaccount.salt not in", values, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltBetween(String value1, String value2) {
            addCriterion("uaccount.salt between", value1, value2, "salt");
            return (Criteria) this;
        }

        public Criteria andSaltNotBetween(String value1, String value2) {
            addCriterion("uaccount.salt not between", value1, value2, "salt");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountIsNull() {
            addCriterion("uaccount.pwd_fail_count is null");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountIsNotNull() {
            addCriterion("uaccount.pwd_fail_count is not null");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountEqualTo(Integer value) {
            addCriterion("uaccount.pwd_fail_count =", value, "pwdFailCount");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountNotEqualTo(Integer value) {
            addCriterion("uaccount.pwd_fail_count <>", value, "pwdFailCount");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountGreaterThan(Integer value) {
            addCriterion("uaccount.pwd_fail_count >", value, "pwdFailCount");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("uaccount.pwd_fail_count >=", value, "pwdFailCount");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountLessThan(Integer value) {
            addCriterion("uaccount.pwd_fail_count <", value, "pwdFailCount");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountLessThanOrEqualTo(Integer value) {
            addCriterion("uaccount.pwd_fail_count <=", value, "pwdFailCount");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountIn(List<Integer> values) {
            addCriterion("uaccount.pwd_fail_count in", values, "pwdFailCount");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountNotIn(List<Integer> values) {
            addCriterion("uaccount.pwd_fail_count not in", values, "pwdFailCount");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountBetween(Integer value1, Integer value2) {
            addCriterion("uaccount.pwd_fail_count between", value1, value2, "pwdFailCount");
            return (Criteria) this;
        }

        public Criteria andPwdFailCountNotBetween(Integer value1, Integer value2) {
            addCriterion("uaccount.pwd_fail_count not between", value1, value2, "pwdFailCount");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayIsNull() {
            addCriterion("uaccount.pwd_fail_day is null");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayIsNotNull() {
            addCriterion("uaccount.pwd_fail_day is not null");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayEqualTo(Integer value) {
            addCriterion("uaccount.pwd_fail_day =", value, "pwdFailDay");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayNotEqualTo(Integer value) {
            addCriterion("uaccount.pwd_fail_day <>", value, "pwdFailDay");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayGreaterThan(Integer value) {
            addCriterion("uaccount.pwd_fail_day >", value, "pwdFailDay");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayGreaterThanOrEqualTo(Integer value) {
            addCriterion("uaccount.pwd_fail_day >=", value, "pwdFailDay");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayLessThan(Integer value) {
            addCriterion("uaccount.pwd_fail_day <", value, "pwdFailDay");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayLessThanOrEqualTo(Integer value) {
            addCriterion("uaccount.pwd_fail_day <=", value, "pwdFailDay");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayIn(List<Integer> values) {
            addCriterion("uaccount.pwd_fail_day in", values, "pwdFailDay");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayNotIn(List<Integer> values) {
            addCriterion("uaccount.pwd_fail_day not in", values, "pwdFailDay");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayBetween(Integer value1, Integer value2) {
            addCriterion("uaccount.pwd_fail_day between", value1, value2, "pwdFailDay");
            return (Criteria) this;
        }

        public Criteria andPwdFailDayNotBetween(Integer value1, Integer value2) {
            addCriterion("uaccount.pwd_fail_day not between", value1, value2, "pwdFailDay");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("uaccount.add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("uaccount.add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(Date value) {
            addCriterion("uaccount.add_time =", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(Date value) {
            addCriterion("uaccount.add_time <>", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(Date value) {
            addCriterion("uaccount.add_time >", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("uaccount.add_time >=", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(Date value) {
            addCriterion("uaccount.add_time <", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(Date value) {
            addCriterion("uaccount.add_time <=", value, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<Date> values) {
            addCriterion("uaccount.add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<Date> values) {
            addCriterion("uaccount.add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(Date value1, Date value2) {
            addCriterion("uaccount.add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(Date value1, Date value2) {
            addCriterion("uaccount.add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("uaccount.modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("uaccount.modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(Date value) {
            addCriterion("uaccount.modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(Date value) {
            addCriterion("uaccount.modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(Date value) {
            addCriterion("uaccount.modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("uaccount.modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(Date value) {
            addCriterion("uaccount.modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(Date value) {
            addCriterion("uaccount.modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<Date> values) {
            addCriterion("uaccount.modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<Date> values) {
            addCriterion("uaccount.modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(Date value1, Date value2) {
            addCriterion("uaccount.modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(Date value1, Date value2) {
            addCriterion("uaccount.modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNull() {
            addCriterion("uaccount.is_delete is null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNotNull() {
            addCriterion("uaccount.is_delete is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteEqualTo(Long value) {
            addCriterion("uaccount.is_delete =", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotEqualTo(Long value) {
            addCriterion("uaccount.is_delete <>", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThan(Long value) {
            addCriterion("uaccount.is_delete >", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThanOrEqualTo(Long value) {
            addCriterion("uaccount.is_delete >=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThan(Long value) {
            addCriterion("uaccount.is_delete <", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThanOrEqualTo(Long value) {
            addCriterion("uaccount.is_delete <=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIn(List<Long> values) {
            addCriterion("uaccount.is_delete in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotIn(List<Long> values) {
            addCriterion("uaccount.is_delete not in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteBetween(Long value1, Long value2) {
            addCriterion("uaccount.is_delete between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotBetween(Long value1, Long value2) {
            addCriterion("uaccount.is_delete not between", value1, value2, "isDelete");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pgy_user_account
     *
     * @mbg.generated do_not_delete_during_merge Tue Apr 16 20:35:46 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pgy_user_account
     *
     * @mbg.generated Tue Apr 16 20:35:46 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}