<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duobei.core.message.sms.dao.mapper.SmsAppMapper">
  <resultMap id="BaseResultMap" type="com.duobei.core.message.sms.domain.SmsApp">
    <id column="a_id" jdbcType="BIGINT" property="id" />
    <result column="a_merchant_no" jdbcType="VARCHAR" property="merchantNo" />
    <result column="a_app_key" jdbcType="VARCHAR" property="appKey" />
    <result column="a_secret_key" jdbcType="VARCHAR" property="secretKey" />
    <result column="a_deleted" jdbcType="TINYINT" property="deleted" />
    <result column="a_create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="a_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="a_update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="a_update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    a.id as a_id, a.merchant_no as a_merchant_no, a.app_key as a_app_key, a.secret_key as a_secret_key, 
    a.deleted as a_deleted, a.create_user as a_create_user, a.create_time as a_create_time, 
    a.update_user as a_update_user, a.update_time as a_update_time
  </sql>
  <select id="selectByExample" parameterType="com.duobei.core.message.sms.domain.SmsAppExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pub_sms_app a
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pub_sms_app a
    where a.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pub_sms_app
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duobei.core.message.sms.domain.SmsAppExample">
    delete from pub_sms_app a
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duobei.core.message.sms.domain.SmsApp">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pub_sms_app (merchant_no, app_key, secret_key, 
      deleted, create_user, create_time, 
      update_user, update_time)
    values (#{merchantNo,jdbcType=VARCHAR}, #{appKey,jdbcType=VARCHAR}, #{secretKey,jdbcType=VARCHAR}, 
      #{deleted,jdbcType=TINYINT}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.duobei.core.message.sms.domain.SmsApp">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pub_sms_app
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="merchantNo != null">
        merchant_no,
      </if>
      <if test="appKey != null">
        app_key,
      </if>
      <if test="secretKey != null">
        secret_key,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="merchantNo != null">
        #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="appKey != null">
        #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="secretKey != null">
        #{secretKey,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duobei.core.message.sms.domain.SmsAppExample" resultType="java.lang.Long">
    select count(*) from pub_sms_app a
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pub_sms_app a
    <set>
      <if test="record.id != null">
        a.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.merchantNo != null">
        a.merchant_no = #{record.merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="record.appKey != null">
        a.app_key = #{record.appKey,jdbcType=VARCHAR},
      </if>
      <if test="record.secretKey != null">
        a.secret_key = #{record.secretKey,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        a.deleted = #{record.deleted,jdbcType=TINYINT},
      </if>
      <if test="record.createUser != null">
        a.create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        a.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        a.update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        a.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pub_sms_app a
    set a.id = #{record.id,jdbcType=BIGINT},
      a.merchant_no = #{record.merchantNo,jdbcType=VARCHAR},
      a.app_key = #{record.appKey,jdbcType=VARCHAR},
      a.secret_key = #{record.secretKey,jdbcType=VARCHAR},
      a.deleted = #{record.deleted,jdbcType=TINYINT},
      a.create_user = #{record.createUser,jdbcType=VARCHAR},
      a.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      a.update_user = #{record.updateUser,jdbcType=VARCHAR},
      a.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duobei.core.message.sms.domain.SmsApp">
    update pub_sms_app
    <set>
      <if test="merchantNo != null">
        merchant_no = #{merchantNo,jdbcType=VARCHAR},
      </if>
      <if test="appKey != null">
        app_key = #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="secretKey != null">
        secret_key = #{secretKey,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duobei.core.message.sms.domain.SmsApp">
    update pub_sms_app
    set merchant_no = #{merchantNo,jdbcType=VARCHAR},
      app_key = #{appKey,jdbcType=VARCHAR},
      secret_key = #{secretKey,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=TINYINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>