<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duobei.core.operation.activity.dao.mapper.ActivityTakeRecordMapper">
  <resultMap id="BaseResultMap" type="com.duobei.core.operation.activity.domain.ActivityTakeRecord">
    <id column="a_id" jdbcType="BIGINT" property="id" />
    <result column="a_act_id" jdbcType="INTEGER" property="actId" />
    <result column="a_act_prize_id" jdbcType="INTEGER" property="actPrizeId" />
    <result column="a_hongbao_prize_id" jdbcType="INTEGER" property="hongbaoPrizeId" />
    <result column="a_at_code" jdbcType="VARCHAR" property="atCode" />
    <result column="a_prize_id" jdbcType="INTEGER" property="prizeId" />
    <result column="a_prize_name" jdbcType="VARCHAR" property="prizeName" />
    <result column="a_user_id" jdbcType="BIGINT" property="userId" />
    <result column="a_phone" jdbcType="VARCHAR" property="phone" />
    <result column="a_before_used_times" jdbcType="INTEGER" property="beforeUsedTimes" />
    <result column="a_after_used_times" jdbcType="INTEGER" property="afterUsedTimes" />
    <result column="a_is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="a_gmt_ymd" jdbcType="INTEGER" property="gmtYmd" />
    <result column="a_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="a_prize_type" jdbcType="VARCHAR" property="prizeType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    a.id as a_id, a.act_id as a_act_id, a.act_prize_id as a_act_prize_id, a.hongbao_prize_id as a_hongbao_prize_id, 
    a.at_code as a_at_code, a.prize_id as a_prize_id, a.prize_name as a_prize_name, a.user_id as a_user_id, 
    a.phone as a_phone, a.before_used_times as a_before_used_times, a.after_used_times as a_after_used_times, 
    a.is_delete as a_is_delete, a.gmt_ymd as a_gmt_ymd, a.create_time as a_create_time, 
    a.prize_type as a_prize_type
  </sql>
  <select id="selectByExample" parameterType="com.duobei.core.operation.activity.domain.ActivityTakeRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yy_activity_take_record a
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yy_activity_take_record a
    where a.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from yy_activity_take_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duobei.core.operation.activity.domain.ActivityTakeRecordExample">
    delete from yy_activity_take_record a
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duobei.core.operation.activity.domain.ActivityTakeRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yy_activity_take_record (act_id, act_prize_id, hongbao_prize_id, 
      at_code, prize_id, prize_name, 
      user_id, phone, before_used_times, 
      after_used_times, is_delete, gmt_ymd, 
      create_time, prize_type)
    values (#{actId,jdbcType=INTEGER}, #{actPrizeId,jdbcType=INTEGER}, #{hongbaoPrizeId,jdbcType=INTEGER}, 
      #{atCode,jdbcType=VARCHAR}, #{prizeId,jdbcType=INTEGER}, #{prizeName,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, #{beforeUsedTimes,jdbcType=INTEGER}, 
      #{afterUsedTimes,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, #{gmtYmd,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{prizeType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.duobei.core.operation.activity.domain.ActivityTakeRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yy_activity_take_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="actId != null">
        act_id,
      </if>
      <if test="actPrizeId != null">
        act_prize_id,
      </if>
      <if test="hongbaoPrizeId != null">
        hongbao_prize_id,
      </if>
      <if test="atCode != null">
        at_code,
      </if>
      <if test="prizeId != null">
        prize_id,
      </if>
      <if test="prizeName != null">
        prize_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="beforeUsedTimes != null">
        before_used_times,
      </if>
      <if test="afterUsedTimes != null">
        after_used_times,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="gmtYmd != null">
        gmt_ymd,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="prizeType != null">
        prize_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="actId != null">
        #{actId,jdbcType=INTEGER},
      </if>
      <if test="actPrizeId != null">
        #{actPrizeId,jdbcType=INTEGER},
      </if>
      <if test="hongbaoPrizeId != null">
        #{hongbaoPrizeId,jdbcType=INTEGER},
      </if>
      <if test="atCode != null">
        #{atCode,jdbcType=VARCHAR},
      </if>
      <if test="prizeId != null">
        #{prizeId,jdbcType=INTEGER},
      </if>
      <if test="prizeName != null">
        #{prizeName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="beforeUsedTimes != null">
        #{beforeUsedTimes,jdbcType=INTEGER},
      </if>
      <if test="afterUsedTimes != null">
        #{afterUsedTimes,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="gmtYmd != null">
        #{gmtYmd,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="prizeType != null">
        #{prizeType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duobei.core.operation.activity.domain.ActivityTakeRecordExample" resultType="java.lang.Long">
    select count(*) from yy_activity_take_record a
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yy_activity_take_record a
    <set>
      <if test="record.id != null">
        a.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.actId != null">
        a.act_id = #{record.actId,jdbcType=INTEGER},
      </if>
      <if test="record.actPrizeId != null">
        a.act_prize_id = #{record.actPrizeId,jdbcType=INTEGER},
      </if>
      <if test="record.hongbaoPrizeId != null">
        a.hongbao_prize_id = #{record.hongbaoPrizeId,jdbcType=INTEGER},
      </if>
      <if test="record.atCode != null">
        a.at_code = #{record.atCode,jdbcType=VARCHAR},
      </if>
      <if test="record.prizeId != null">
        a.prize_id = #{record.prizeId,jdbcType=INTEGER},
      </if>
      <if test="record.prizeName != null">
        a.prize_name = #{record.prizeName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        a.user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.phone != null">
        a.phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.beforeUsedTimes != null">
        a.before_used_times = #{record.beforeUsedTimes,jdbcType=INTEGER},
      </if>
      <if test="record.afterUsedTimes != null">
        a.after_used_times = #{record.afterUsedTimes,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        a.is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.gmtYmd != null">
        a.gmt_ymd = #{record.gmtYmd,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        a.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.prizeType != null">
        a.prize_type = #{record.prizeType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yy_activity_take_record a
    set a.id = #{record.id,jdbcType=BIGINT},
      a.act_id = #{record.actId,jdbcType=INTEGER},
      a.act_prize_id = #{record.actPrizeId,jdbcType=INTEGER},
      a.hongbao_prize_id = #{record.hongbaoPrizeId,jdbcType=INTEGER},
      a.at_code = #{record.atCode,jdbcType=VARCHAR},
      a.prize_id = #{record.prizeId,jdbcType=INTEGER},
      a.prize_name = #{record.prizeName,jdbcType=VARCHAR},
      a.user_id = #{record.userId,jdbcType=BIGINT},
      a.phone = #{record.phone,jdbcType=VARCHAR},
      a.before_used_times = #{record.beforeUsedTimes,jdbcType=INTEGER},
      a.after_used_times = #{record.afterUsedTimes,jdbcType=INTEGER},
      a.is_delete = #{record.isDelete,jdbcType=INTEGER},
      a.gmt_ymd = #{record.gmtYmd,jdbcType=INTEGER},
      a.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      a.prize_type = #{record.prizeType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duobei.core.operation.activity.domain.ActivityTakeRecord">
    update yy_activity_take_record
    <set>
      <if test="actId != null">
        act_id = #{actId,jdbcType=INTEGER},
      </if>
      <if test="actPrizeId != null">
        act_prize_id = #{actPrizeId,jdbcType=INTEGER},
      </if>
      <if test="hongbaoPrizeId != null">
        hongbao_prize_id = #{hongbaoPrizeId,jdbcType=INTEGER},
      </if>
      <if test="atCode != null">
        at_code = #{atCode,jdbcType=VARCHAR},
      </if>
      <if test="prizeId != null">
        prize_id = #{prizeId,jdbcType=INTEGER},
      </if>
      <if test="prizeName != null">
        prize_name = #{prizeName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="beforeUsedTimes != null">
        before_used_times = #{beforeUsedTimes,jdbcType=INTEGER},
      </if>
      <if test="afterUsedTimes != null">
        after_used_times = #{afterUsedTimes,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="gmtYmd != null">
        gmt_ymd = #{gmtYmd,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="prizeType != null">
        prize_type = #{prizeType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duobei.core.operation.activity.domain.ActivityTakeRecord">
    update yy_activity_take_record
    set act_id = #{actId,jdbcType=INTEGER},
      act_prize_id = #{actPrizeId,jdbcType=INTEGER},
      hongbao_prize_id = #{hongbaoPrizeId,jdbcType=INTEGER},
      at_code = #{atCode,jdbcType=VARCHAR},
      prize_id = #{prizeId,jdbcType=INTEGER},
      prize_name = #{prizeName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR},
      before_used_times = #{beforeUsedTimes,jdbcType=INTEGER},
      after_used_times = #{afterUsedTimes,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      gmt_ymd = #{gmtYmd,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      prize_type = #{prizeType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>