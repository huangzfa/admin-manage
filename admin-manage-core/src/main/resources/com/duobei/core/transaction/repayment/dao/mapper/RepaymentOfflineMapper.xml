<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duobei.core.transaction.repayment.dao.mapper.RepaymentOfflineMapper">
  <resultMap id="BaseResultMap" type="com.duobei.core.transaction.repayment.domain.RepaymentOffline">
    <id column="a_id" jdbcType="BIGINT" property="id" />
    <result column="a_product_id" jdbcType="INTEGER" property="productId" />
    <result column="a_user_id" jdbcType="BIGINT" property="userId" />
    <result column="a_borrow_cash_id" jdbcType="BIGINT" property="borrowCashId" />
    <result column="a_is_finish" jdbcType="TINYINT" property="isFinish" />
    <result column="a_state" jdbcType="TINYINT" property="state" />
    <result column="a_amount" jdbcType="BIGINT" property="amount" />
    <result column="a_repay_amount" jdbcType="BIGINT" property="repayAmount" />
    <result column="a_derate_amount" jdbcType="BIGINT" property="derateAmount" />
    <result column="a_gmt_real_repay" jdbcType="TIMESTAMP" property="gmtRealRepay" />
    <result column="a_arrears_amount" jdbcType="BIGINT" property="arrearsAmount" />
    <result column="a_img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="a_trade_no" jdbcType="VARCHAR" property="tradeNo" />
    <result column="a_submitter_type" jdbcType="TINYINT" property="submitterType" />
    <result column="a_submitter_id" jdbcType="BIGINT" property="submitterId" />
    <result column="a_submitter_name" jdbcType="VARCHAR" property="submitterName" />
    <result column="a_submitter_time" jdbcType="TIMESTAMP" property="submitterTime" />
    <result column="a_settle_operator_id" jdbcType="INTEGER" property="settleOperatorId" />
    <result column="a_settle_operator_name" jdbcType="VARCHAR" property="settleOperatorName" />
    <result column="a_settle_type" jdbcType="TINYINT" property="settleType" />
    <result column="a_settle_time" jdbcType="TIMESTAMP" property="settleTime" />
    <result column="a_account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="a_account_no" jdbcType="VARCHAR" property="accountNo" />
    <result column="a_account_no_md5" jdbcType="VARCHAR" property="accountNoMd5" />
    <result column="a_account_no_encrypt" jdbcType="VARCHAR" property="accountNoEncrypt" />
    <result column="a_account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="a_zfb_account_id" jdbcType="INTEGER" property="zfbAccountId" />
    <result column="a_zfb_account" jdbcType="VARCHAR" property="zfbAccount" />
    <result column="a_is_invalid" jdbcType="TINYINT" property="isInvalid" />
    <result column="a_invalid_operator_id" jdbcType="BIGINT" property="invalidOperatorId" />
    <result column="a_invalid_modify" jdbcType="TIMESTAMP" property="invalidModify" />
    <result column="a_remark" jdbcType="VARCHAR" property="remark" />
    <result column="a_add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="a_modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="a_add_operator_id" jdbcType="INTEGER" property="addOperatorId" />
    <result column="a_modify_operator_id" jdbcType="INTEGER" property="modifyOperatorId" />
    <result column="a_is_delete" jdbcType="BIGINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    a.id as a_id, a.product_id as a_product_id, a.user_id as a_user_id, a.borrow_cash_id as a_borrow_cash_id, 
    a.is_finish as a_is_finish, a.state as a_state, a.amount as a_amount, a.repay_amount as a_repay_amount, 
    a.derate_amount as a_derate_amount, a.gmt_real_repay as a_gmt_real_repay, a.arrears_amount as a_arrears_amount, 
    a.img_url as a_img_url, a.trade_no as a_trade_no, a.submitter_type as a_submitter_type, 
    a.submitter_id as a_submitter_id, a.submitter_name as a_submitter_name, a.submitter_time as a_submitter_time, 
    a.settle_operator_id as a_settle_operator_id, a.settle_operator_name as a_settle_operator_name, 
    a.settle_type as a_settle_type, a.settle_time as a_settle_time, a.account_type as a_account_type, 
    a.account_no as a_account_no, a.account_no_md5 as a_account_no_md5, a.account_no_encrypt as a_account_no_encrypt, 
    a.account_name as a_account_name, a.zfb_account_id as a_zfb_account_id, a.zfb_account as a_zfb_account, 
    a.is_invalid as a_is_invalid, a.invalid_operator_id as a_invalid_operator_id, a.invalid_modify as a_invalid_modify, 
    a.remark as a_remark, a.add_time as a_add_time, a.modify_time as a_modify_time, a.add_operator_id as a_add_operator_id, 
    a.modify_operator_id as a_modify_operator_id, a.is_delete as a_is_delete
  </sql>
  <select id="selectByExample" parameterType="com.duobei.core.transaction.repayment.domain.RepaymentOfflineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tt_borrow_cash_repayment_offline a
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tt_borrow_cash_repayment_offline a
    where a.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tt_borrow_cash_repayment_offline
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duobei.core.transaction.repayment.domain.RepaymentOfflineExample">
    delete from tt_borrow_cash_repayment_offline a
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duobei.core.transaction.repayment.domain.RepaymentOffline">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_borrow_cash_repayment_offline (product_id, user_id, borrow_cash_id, 
      is_finish, state, amount, 
      repay_amount, derate_amount, gmt_real_repay, 
      arrears_amount, img_url, trade_no, 
      submitter_type, submitter_id, submitter_name, 
      submitter_time, settle_operator_id, settle_operator_name, 
      settle_type, settle_time, account_type, 
      account_no, account_no_md5, account_no_encrypt, 
      account_name, zfb_account_id, zfb_account, 
      is_invalid, invalid_operator_id, invalid_modify, 
      remark, add_time, modify_time, 
      add_operator_id, modify_operator_id, is_delete
      )
    values (#{productId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{borrowCashId,jdbcType=BIGINT}, 
      #{isFinish,jdbcType=TINYINT}, #{state,jdbcType=TINYINT}, #{amount,jdbcType=BIGINT}, 
      #{repayAmount,jdbcType=BIGINT}, #{derateAmount,jdbcType=BIGINT}, #{gmtRealRepay,jdbcType=TIMESTAMP}, 
      #{arrearsAmount,jdbcType=BIGINT}, #{imgUrl,jdbcType=VARCHAR}, #{tradeNo,jdbcType=VARCHAR}, 
      #{submitterType,jdbcType=TINYINT}, #{submitterId,jdbcType=BIGINT}, #{submitterName,jdbcType=VARCHAR}, 
      #{submitterTime,jdbcType=TIMESTAMP}, #{settleOperatorId,jdbcType=INTEGER}, #{settleOperatorName,jdbcType=VARCHAR}, 
      #{settleType,jdbcType=TINYINT}, #{settleTime,jdbcType=TIMESTAMP}, #{accountType,jdbcType=VARCHAR}, 
      #{accountNo,jdbcType=VARCHAR}, #{accountNoMd5,jdbcType=VARCHAR}, #{accountNoEncrypt,jdbcType=VARCHAR}, 
      #{accountName,jdbcType=VARCHAR}, #{zfbAccountId,jdbcType=INTEGER}, #{zfbAccount,jdbcType=VARCHAR}, 
      #{isInvalid,jdbcType=TINYINT}, #{invalidOperatorId,jdbcType=BIGINT}, #{invalidModify,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{addOperatorId,jdbcType=INTEGER}, #{modifyOperatorId,jdbcType=INTEGER}, #{isDelete,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.duobei.core.transaction.repayment.domain.RepaymentOffline">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_borrow_cash_repayment_offline
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="borrowCashId != null">
        borrow_cash_id,
      </if>
      <if test="isFinish != null">
        is_finish,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="repayAmount != null">
        repay_amount,
      </if>
      <if test="derateAmount != null">
        derate_amount,
      </if>
      <if test="gmtRealRepay != null">
        gmt_real_repay,
      </if>
      <if test="arrearsAmount != null">
        arrears_amount,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="tradeNo != null">
        trade_no,
      </if>
      <if test="submitterType != null">
        submitter_type,
      </if>
      <if test="submitterId != null">
        submitter_id,
      </if>
      <if test="submitterName != null">
        submitter_name,
      </if>
      <if test="submitterTime != null">
        submitter_time,
      </if>
      <if test="settleOperatorId != null">
        settle_operator_id,
      </if>
      <if test="settleOperatorName != null">
        settle_operator_name,
      </if>
      <if test="settleType != null">
        settle_type,
      </if>
      <if test="settleTime != null">
        settle_time,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="accountNo != null">
        account_no,
      </if>
      <if test="accountNoMd5 != null">
        account_no_md5,
      </if>
      <if test="accountNoEncrypt != null">
        account_no_encrypt,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="zfbAccountId != null">
        zfb_account_id,
      </if>
      <if test="zfbAccount != null">
        zfb_account,
      </if>
      <if test="isInvalid != null">
        is_invalid,
      </if>
      <if test="invalidOperatorId != null">
        invalid_operator_id,
      </if>
      <if test="invalidModify != null">
        invalid_modify,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="addOperatorId != null">
        add_operator_id,
      </if>
      <if test="modifyOperatorId != null">
        modify_operator_id,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="borrowCashId != null">
        #{borrowCashId,jdbcType=BIGINT},
      </if>
      <if test="isFinish != null">
        #{isFinish,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="repayAmount != null">
        #{repayAmount,jdbcType=BIGINT},
      </if>
      <if test="derateAmount != null">
        #{derateAmount,jdbcType=BIGINT},
      </if>
      <if test="gmtRealRepay != null">
        #{gmtRealRepay,jdbcType=TIMESTAMP},
      </if>
      <if test="arrearsAmount != null">
        #{arrearsAmount,jdbcType=BIGINT},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="submitterType != null">
        #{submitterType,jdbcType=TINYINT},
      </if>
      <if test="submitterId != null">
        #{submitterId,jdbcType=BIGINT},
      </if>
      <if test="submitterName != null">
        #{submitterName,jdbcType=VARCHAR},
      </if>
      <if test="submitterTime != null">
        #{submitterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="settleOperatorId != null">
        #{settleOperatorId,jdbcType=INTEGER},
      </if>
      <if test="settleOperatorName != null">
        #{settleOperatorName,jdbcType=VARCHAR},
      </if>
      <if test="settleType != null">
        #{settleType,jdbcType=TINYINT},
      </if>
      <if test="settleTime != null">
        #{settleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountNo != null">
        #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="accountNoMd5 != null">
        #{accountNoMd5,jdbcType=VARCHAR},
      </if>
      <if test="accountNoEncrypt != null">
        #{accountNoEncrypt,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="zfbAccountId != null">
        #{zfbAccountId,jdbcType=INTEGER},
      </if>
      <if test="zfbAccount != null">
        #{zfbAccount,jdbcType=VARCHAR},
      </if>
      <if test="isInvalid != null">
        #{isInvalid,jdbcType=TINYINT},
      </if>
      <if test="invalidOperatorId != null">
        #{invalidOperatorId,jdbcType=BIGINT},
      </if>
      <if test="invalidModify != null">
        #{invalidModify,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addOperatorId != null">
        #{addOperatorId,jdbcType=INTEGER},
      </if>
      <if test="modifyOperatorId != null">
        #{modifyOperatorId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duobei.core.transaction.repayment.domain.RepaymentOfflineExample" resultType="java.lang.Long">
    select count(*) from tt_borrow_cash_repayment_offline a
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tt_borrow_cash_repayment_offline a
    <set>
      <if test="record.id != null">
        a.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        a.product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        a.user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.borrowCashId != null">
        a.borrow_cash_id = #{record.borrowCashId,jdbcType=BIGINT},
      </if>
      <if test="record.isFinish != null">
        a.is_finish = #{record.isFinish,jdbcType=TINYINT},
      </if>
      <if test="record.state != null">
        a.state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.amount != null">
        a.amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.repayAmount != null">
        a.repay_amount = #{record.repayAmount,jdbcType=BIGINT},
      </if>
      <if test="record.derateAmount != null">
        a.derate_amount = #{record.derateAmount,jdbcType=BIGINT},
      </if>
      <if test="record.gmtRealRepay != null">
        a.gmt_real_repay = #{record.gmtRealRepay,jdbcType=TIMESTAMP},
      </if>
      <if test="record.arrearsAmount != null">
        a.arrears_amount = #{record.arrearsAmount,jdbcType=BIGINT},
      </if>
      <if test="record.imgUrl != null">
        a.img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeNo != null">
        a.trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.submitterType != null">
        a.submitter_type = #{record.submitterType,jdbcType=TINYINT},
      </if>
      <if test="record.submitterId != null">
        a.submitter_id = #{record.submitterId,jdbcType=BIGINT},
      </if>
      <if test="record.submitterName != null">
        a.submitter_name = #{record.submitterName,jdbcType=VARCHAR},
      </if>
      <if test="record.submitterTime != null">
        a.submitter_time = #{record.submitterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.settleOperatorId != null">
        a.settle_operator_id = #{record.settleOperatorId,jdbcType=INTEGER},
      </if>
      <if test="record.settleOperatorName != null">
        a.settle_operator_name = #{record.settleOperatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.settleType != null">
        a.settle_type = #{record.settleType,jdbcType=TINYINT},
      </if>
      <if test="record.settleTime != null">
        a.settle_time = #{record.settleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountType != null">
        a.account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNo != null">
        a.account_no = #{record.accountNo,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNoMd5 != null">
        a.account_no_md5 = #{record.accountNoMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNoEncrypt != null">
        a.account_no_encrypt = #{record.accountNoEncrypt,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        a.account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.zfbAccountId != null">
        a.zfb_account_id = #{record.zfbAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.zfbAccount != null">
        a.zfb_account = #{record.zfbAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.isInvalid != null">
        a.is_invalid = #{record.isInvalid,jdbcType=TINYINT},
      </if>
      <if test="record.invalidOperatorId != null">
        a.invalid_operator_id = #{record.invalidOperatorId,jdbcType=BIGINT},
      </if>
      <if test="record.invalidModify != null">
        a.invalid_modify = #{record.invalidModify,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        a.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        a.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        a.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addOperatorId != null">
        a.add_operator_id = #{record.addOperatorId,jdbcType=INTEGER},
      </if>
      <if test="record.modifyOperatorId != null">
        a.modify_operator_id = #{record.modifyOperatorId,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        a.is_delete = #{record.isDelete,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tt_borrow_cash_repayment_offline a
    set a.id = #{record.id,jdbcType=BIGINT},
      a.product_id = #{record.productId,jdbcType=INTEGER},
      a.user_id = #{record.userId,jdbcType=BIGINT},
      a.borrow_cash_id = #{record.borrowCashId,jdbcType=BIGINT},
      a.is_finish = #{record.isFinish,jdbcType=TINYINT},
      a.state = #{record.state,jdbcType=TINYINT},
      a.amount = #{record.amount,jdbcType=BIGINT},
      a.repay_amount = #{record.repayAmount,jdbcType=BIGINT},
      a.derate_amount = #{record.derateAmount,jdbcType=BIGINT},
      a.gmt_real_repay = #{record.gmtRealRepay,jdbcType=TIMESTAMP},
      a.arrears_amount = #{record.arrearsAmount,jdbcType=BIGINT},
      a.img_url = #{record.imgUrl,jdbcType=VARCHAR},
      a.trade_no = #{record.tradeNo,jdbcType=VARCHAR},
      a.submitter_type = #{record.submitterType,jdbcType=TINYINT},
      a.submitter_id = #{record.submitterId,jdbcType=BIGINT},
      a.submitter_name = #{record.submitterName,jdbcType=VARCHAR},
      a.submitter_time = #{record.submitterTime,jdbcType=TIMESTAMP},
      a.settle_operator_id = #{record.settleOperatorId,jdbcType=INTEGER},
      a.settle_operator_name = #{record.settleOperatorName,jdbcType=VARCHAR},
      a.settle_type = #{record.settleType,jdbcType=TINYINT},
      a.settle_time = #{record.settleTime,jdbcType=TIMESTAMP},
      a.account_type = #{record.accountType,jdbcType=VARCHAR},
      a.account_no = #{record.accountNo,jdbcType=VARCHAR},
      a.account_no_md5 = #{record.accountNoMd5,jdbcType=VARCHAR},
      a.account_no_encrypt = #{record.accountNoEncrypt,jdbcType=VARCHAR},
      a.account_name = #{record.accountName,jdbcType=VARCHAR},
      a.zfb_account_id = #{record.zfbAccountId,jdbcType=INTEGER},
      a.zfb_account = #{record.zfbAccount,jdbcType=VARCHAR},
      a.is_invalid = #{record.isInvalid,jdbcType=TINYINT},
      a.invalid_operator_id = #{record.invalidOperatorId,jdbcType=BIGINT},
      a.invalid_modify = #{record.invalidModify,jdbcType=TIMESTAMP},
      a.remark = #{record.remark,jdbcType=VARCHAR},
      a.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      a.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      a.add_operator_id = #{record.addOperatorId,jdbcType=INTEGER},
      a.modify_operator_id = #{record.modifyOperatorId,jdbcType=INTEGER},
      a.is_delete = #{record.isDelete,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duobei.core.transaction.repayment.domain.RepaymentOffline">
    update tt_borrow_cash_repayment_offline
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="borrowCashId != null">
        borrow_cash_id = #{borrowCashId,jdbcType=BIGINT},
      </if>
      <if test="isFinish != null">
        is_finish = #{isFinish,jdbcType=TINYINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="repayAmount != null">
        repay_amount = #{repayAmount,jdbcType=BIGINT},
      </if>
      <if test="derateAmount != null">
        derate_amount = #{derateAmount,jdbcType=BIGINT},
      </if>
      <if test="gmtRealRepay != null">
        gmt_real_repay = #{gmtRealRepay,jdbcType=TIMESTAMP},
      </if>
      <if test="arrearsAmount != null">
        arrears_amount = #{arrearsAmount,jdbcType=BIGINT},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="tradeNo != null">
        trade_no = #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="submitterType != null">
        submitter_type = #{submitterType,jdbcType=TINYINT},
      </if>
      <if test="submitterId != null">
        submitter_id = #{submitterId,jdbcType=BIGINT},
      </if>
      <if test="submitterName != null">
        submitter_name = #{submitterName,jdbcType=VARCHAR},
      </if>
      <if test="submitterTime != null">
        submitter_time = #{submitterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="settleOperatorId != null">
        settle_operator_id = #{settleOperatorId,jdbcType=INTEGER},
      </if>
      <if test="settleOperatorName != null">
        settle_operator_name = #{settleOperatorName,jdbcType=VARCHAR},
      </if>
      <if test="settleType != null">
        settle_type = #{settleType,jdbcType=TINYINT},
      </if>
      <if test="settleTime != null">
        settle_time = #{settleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountNo != null">
        account_no = #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="accountNoMd5 != null">
        account_no_md5 = #{accountNoMd5,jdbcType=VARCHAR},
      </if>
      <if test="accountNoEncrypt != null">
        account_no_encrypt = #{accountNoEncrypt,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="zfbAccountId != null">
        zfb_account_id = #{zfbAccountId,jdbcType=INTEGER},
      </if>
      <if test="zfbAccount != null">
        zfb_account = #{zfbAccount,jdbcType=VARCHAR},
      </if>
      <if test="isInvalid != null">
        is_invalid = #{isInvalid,jdbcType=TINYINT},
      </if>
      <if test="invalidOperatorId != null">
        invalid_operator_id = #{invalidOperatorId,jdbcType=BIGINT},
      </if>
      <if test="invalidModify != null">
        invalid_modify = #{invalidModify,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addOperatorId != null">
        add_operator_id = #{addOperatorId,jdbcType=INTEGER},
      </if>
      <if test="modifyOperatorId != null">
        modify_operator_id = #{modifyOperatorId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duobei.core.transaction.repayment.domain.RepaymentOffline">
    update tt_borrow_cash_repayment_offline
    set product_id = #{productId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      borrow_cash_id = #{borrowCashId,jdbcType=BIGINT},
      is_finish = #{isFinish,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      amount = #{amount,jdbcType=BIGINT},
      repay_amount = #{repayAmount,jdbcType=BIGINT},
      derate_amount = #{derateAmount,jdbcType=BIGINT},
      gmt_real_repay = #{gmtRealRepay,jdbcType=TIMESTAMP},
      arrears_amount = #{arrearsAmount,jdbcType=BIGINT},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      trade_no = #{tradeNo,jdbcType=VARCHAR},
      submitter_type = #{submitterType,jdbcType=TINYINT},
      submitter_id = #{submitterId,jdbcType=BIGINT},
      submitter_name = #{submitterName,jdbcType=VARCHAR},
      submitter_time = #{submitterTime,jdbcType=TIMESTAMP},
      settle_operator_id = #{settleOperatorId,jdbcType=INTEGER},
      settle_operator_name = #{settleOperatorName,jdbcType=VARCHAR},
      settle_type = #{settleType,jdbcType=TINYINT},
      settle_time = #{settleTime,jdbcType=TIMESTAMP},
      account_type = #{accountType,jdbcType=VARCHAR},
      account_no = #{accountNo,jdbcType=VARCHAR},
      account_no_md5 = #{accountNoMd5,jdbcType=VARCHAR},
      account_no_encrypt = #{accountNoEncrypt,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      zfb_account_id = #{zfbAccountId,jdbcType=INTEGER},
      zfb_account = #{zfbAccount,jdbcType=VARCHAR},
      is_invalid = #{isInvalid,jdbcType=TINYINT},
      invalid_operator_id = #{invalidOperatorId,jdbcType=BIGINT},
      invalid_modify = #{invalidModify,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      add_operator_id = #{addOperatorId,jdbcType=INTEGER},
      modify_operator_id = #{modifyOperatorId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>