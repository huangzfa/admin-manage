<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duobei.core.transaction.repayment.dao.mapper.BorrowCashRepaymentMapper">
  <resultMap id="BaseResultMap" type="com.duobei.core.transaction.repayment.domain.BorrowCashRepayment">
    <id column="repayment_id" jdbcType="BIGINT" property="id" />
    <result column="repayment_product_id" jdbcType="INTEGER" property="productId" />
    <result column="repayment_user_id" jdbcType="BIGINT" property="userId" />
    <result column="repayment_borrow_cash_id" jdbcType="BIGINT" property="borrowCashId" />
    <result column="repayment_repay_no" jdbcType="VARCHAR" property="repayNo" />
    <result column="repayment_repay_type" jdbcType="TINYINT" property="repayType" />
    <result column="repayment_repay_state" jdbcType="TINYINT" property="repayState" />
    <result column="repayment_repay_amount" jdbcType="BIGINT" property="repayAmount" />
    <result column="repayment_repay_actual_amount" jdbcType="BIGINT" property="repayActualAmount" />
    <result column="repayment_repay_overdue_amount" jdbcType="BIGINT" property="repayOverdueAmount" />
    <result column="repayment_repay_rate_amount" jdbcType="BIGINT" property="repayRateAmount" />
    <result column="repayment_unpaid_amount" jdbcType="BIGINT" property="unpaidAmount" />
    <result column="repayment_rebate_amount" jdbcType="BIGINT" property="rebateAmount" />
    <result column="repayment_ups_order_no" jdbcType="VARCHAR" property="upsOrderNo" />
    <result column="repayment_ups_third_order_no" jdbcType="VARCHAR" property="upsThirdOrderNo" />
    <result column="repayment_gmt_ups_req" jdbcType="TIMESTAMP" property="gmtUpsReq" />
    <result column="repayment_gmt_ups_finish" jdbcType="TIMESTAMP" property="gmtUpsFinish" />
    <result column="repayment_account_type" jdbcType="TINYINT" property="accountType" />
    <result column="repayment_account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="repayment_account_no" jdbcType="VARCHAR" property="accountNo" />
    <result column="repayment_account_no_md5" jdbcType="VARCHAR" property="accountNoMd5" />
    <result column="repayment_coupon_id" jdbcType="BIGINT" property="couponId" />
    <result column="repayment_coupon_amount" jdbcType="BIGINT" property="couponAmount" />
    <result column="repayment_fail_reason" jdbcType="VARCHAR" property="failReason" />
    <result column="repayment_remark" jdbcType="VARCHAR" property="remark" />
    <result column="repayment_data_version" jdbcType="INTEGER" property="dataVersion" />
    <result column="repayment_add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="repayment_modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="repayment_is_delete" jdbcType="BIGINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    repayment.id as repayment_id, repayment.product_id as repayment_product_id, repayment.user_id as repayment_user_id, 
    repayment.borrow_cash_id as repayment_borrow_cash_id, repayment.repay_no as repayment_repay_no, 
    repayment.repay_type as repayment_repay_type, repayment.repay_state as repayment_repay_state, 
    repayment.repay_amount as repayment_repay_amount, repayment.repay_actual_amount as repayment_repay_actual_amount, 
    repayment.repay_overdue_amount as repayment_repay_overdue_amount, repayment.repay_rate_amount as repayment_repay_rate_amount, 
    repayment.unpaid_amount as repayment_unpaid_amount, repayment.rebate_amount as repayment_rebate_amount, 
    repayment.ups_order_no as repayment_ups_order_no, repayment.ups_third_order_no as repayment_ups_third_order_no, 
    repayment.gmt_ups_req as repayment_gmt_ups_req, repayment.gmt_ups_finish as repayment_gmt_ups_finish, 
    repayment.account_type as repayment_account_type, repayment.account_name as repayment_account_name, 
    repayment.account_no as repayment_account_no, repayment.account_no_md5 as repayment_account_no_md5, 
    repayment.coupon_id as repayment_coupon_id, repayment.coupon_amount as repayment_coupon_amount, 
    repayment.fail_reason as repayment_fail_reason, repayment.remark as repayment_remark, 
    repayment.data_version as repayment_data_version, repayment.add_time as repayment_add_time, 
    repayment.modify_time as repayment_modify_time, repayment.is_delete as repayment_is_delete
  </sql>
  <select id="selectByExample" parameterType="com.duobei.core.transaction.repayment.domain.BorrowCashRepaymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tt_borrow_cash_repayment repayment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tt_borrow_cash_repayment repayment
    where repayment.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tt_borrow_cash_repayment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duobei.core.transaction.repayment.domain.BorrowCashRepaymentExample">
    delete from tt_borrow_cash_repayment repayment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duobei.core.transaction.repayment.domain.BorrowCashRepayment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_borrow_cash_repayment (product_id, user_id, borrow_cash_id, 
      repay_no, repay_type, repay_state, 
      repay_amount, repay_actual_amount, repay_overdue_amount, 
      repay_rate_amount, unpaid_amount, rebate_amount, 
      ups_order_no, ups_third_order_no, gmt_ups_req, 
      gmt_ups_finish, account_type, account_name, 
      account_no, account_no_md5, coupon_id, 
      coupon_amount, fail_reason, remark, 
      data_version, add_time, modify_time, 
      is_delete)
    values (#{productId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{borrowCashId,jdbcType=BIGINT}, 
      #{repayNo,jdbcType=VARCHAR}, #{repayType,jdbcType=TINYINT}, #{repayState,jdbcType=TINYINT}, 
      #{repayAmount,jdbcType=BIGINT}, #{repayActualAmount,jdbcType=BIGINT}, #{repayOverdueAmount,jdbcType=BIGINT}, 
      #{repayRateAmount,jdbcType=BIGINT}, #{unpaidAmount,jdbcType=BIGINT}, #{rebateAmount,jdbcType=BIGINT}, 
      #{upsOrderNo,jdbcType=VARCHAR}, #{upsThirdOrderNo,jdbcType=VARCHAR}, #{gmtUpsReq,jdbcType=TIMESTAMP}, 
      #{gmtUpsFinish,jdbcType=TIMESTAMP}, #{accountType,jdbcType=TINYINT}, #{accountName,jdbcType=VARCHAR}, 
      #{accountNo,jdbcType=VARCHAR}, #{accountNoMd5,jdbcType=VARCHAR}, #{couponId,jdbcType=BIGINT}, 
      #{couponAmount,jdbcType=BIGINT}, #{failReason,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{dataVersion,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.duobei.core.transaction.repayment.domain.BorrowCashRepayment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_borrow_cash_repayment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="borrowCashId != null">
        borrow_cash_id,
      </if>
      <if test="repayNo != null">
        repay_no,
      </if>
      <if test="repayType != null">
        repay_type,
      </if>
      <if test="repayState != null">
        repay_state,
      </if>
      <if test="repayAmount != null">
        repay_amount,
      </if>
      <if test="repayActualAmount != null">
        repay_actual_amount,
      </if>
      <if test="repayOverdueAmount != null">
        repay_overdue_amount,
      </if>
      <if test="repayRateAmount != null">
        repay_rate_amount,
      </if>
      <if test="unpaidAmount != null">
        unpaid_amount,
      </if>
      <if test="rebateAmount != null">
        rebate_amount,
      </if>
      <if test="upsOrderNo != null">
        ups_order_no,
      </if>
      <if test="upsThirdOrderNo != null">
        ups_third_order_no,
      </if>
      <if test="gmtUpsReq != null">
        gmt_ups_req,
      </if>
      <if test="gmtUpsFinish != null">
        gmt_ups_finish,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="accountNo != null">
        account_no,
      </if>
      <if test="accountNoMd5 != null">
        account_no_md5,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="couponAmount != null">
        coupon_amount,
      </if>
      <if test="failReason != null">
        fail_reason,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="dataVersion != null">
        data_version,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="borrowCashId != null">
        #{borrowCashId,jdbcType=BIGINT},
      </if>
      <if test="repayNo != null">
        #{repayNo,jdbcType=VARCHAR},
      </if>
      <if test="repayType != null">
        #{repayType,jdbcType=TINYINT},
      </if>
      <if test="repayState != null">
        #{repayState,jdbcType=TINYINT},
      </if>
      <if test="repayAmount != null">
        #{repayAmount,jdbcType=BIGINT},
      </if>
      <if test="repayActualAmount != null">
        #{repayActualAmount,jdbcType=BIGINT},
      </if>
      <if test="repayOverdueAmount != null">
        #{repayOverdueAmount,jdbcType=BIGINT},
      </if>
      <if test="repayRateAmount != null">
        #{repayRateAmount,jdbcType=BIGINT},
      </if>
      <if test="unpaidAmount != null">
        #{unpaidAmount,jdbcType=BIGINT},
      </if>
      <if test="rebateAmount != null">
        #{rebateAmount,jdbcType=BIGINT},
      </if>
      <if test="upsOrderNo != null">
        #{upsOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="upsThirdOrderNo != null">
        #{upsThirdOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpsReq != null">
        #{gmtUpsReq,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpsFinish != null">
        #{gmtUpsFinish,jdbcType=TIMESTAMP},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=TINYINT},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountNo != null">
        #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="accountNoMd5 != null">
        #{accountNoMd5,jdbcType=VARCHAR},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=BIGINT},
      </if>
      <if test="couponAmount != null">
        #{couponAmount,jdbcType=BIGINT},
      </if>
      <if test="failReason != null">
        #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dataVersion != null">
        #{dataVersion,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duobei.core.transaction.repayment.domain.BorrowCashRepaymentExample" resultType="java.lang.Long">
    select count(*) from tt_borrow_cash_repayment repayment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tt_borrow_cash_repayment repayment
    <set>
      <if test="record.id != null">
        repayment.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        repayment.product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        repayment.user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.borrowCashId != null">
        repayment.borrow_cash_id = #{record.borrowCashId,jdbcType=BIGINT},
      </if>
      <if test="record.repayNo != null">
        repayment.repay_no = #{record.repayNo,jdbcType=VARCHAR},
      </if>
      <if test="record.repayType != null">
        repayment.repay_type = #{record.repayType,jdbcType=TINYINT},
      </if>
      <if test="record.repayState != null">
        repayment.repay_state = #{record.repayState,jdbcType=TINYINT},
      </if>
      <if test="record.repayAmount != null">
        repayment.repay_amount = #{record.repayAmount,jdbcType=BIGINT},
      </if>
      <if test="record.repayActualAmount != null">
        repayment.repay_actual_amount = #{record.repayActualAmount,jdbcType=BIGINT},
      </if>
      <if test="record.repayOverdueAmount != null">
        repayment.repay_overdue_amount = #{record.repayOverdueAmount,jdbcType=BIGINT},
      </if>
      <if test="record.repayRateAmount != null">
        repayment.repay_rate_amount = #{record.repayRateAmount,jdbcType=BIGINT},
      </if>
      <if test="record.unpaidAmount != null">
        repayment.unpaid_amount = #{record.unpaidAmount,jdbcType=BIGINT},
      </if>
      <if test="record.rebateAmount != null">
        repayment.rebate_amount = #{record.rebateAmount,jdbcType=BIGINT},
      </if>
      <if test="record.upsOrderNo != null">
        repayment.ups_order_no = #{record.upsOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.upsThirdOrderNo != null">
        repayment.ups_third_order_no = #{record.upsThirdOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtUpsReq != null">
        repayment.gmt_ups_req = #{record.gmtUpsReq,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpsFinish != null">
        repayment.gmt_ups_finish = #{record.gmtUpsFinish,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountType != null">
        repayment.account_type = #{record.accountType,jdbcType=TINYINT},
      </if>
      <if test="record.accountName != null">
        repayment.account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNo != null">
        repayment.account_no = #{record.accountNo,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNoMd5 != null">
        repayment.account_no_md5 = #{record.accountNoMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.couponId != null">
        repayment.coupon_id = #{record.couponId,jdbcType=BIGINT},
      </if>
      <if test="record.couponAmount != null">
        repayment.coupon_amount = #{record.couponAmount,jdbcType=BIGINT},
      </if>
      <if test="record.failReason != null">
        repayment.fail_reason = #{record.failReason,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        repayment.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.dataVersion != null">
        repayment.data_version = #{record.dataVersion,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        repayment.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        repayment.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        repayment.is_delete = #{record.isDelete,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tt_borrow_cash_repayment repayment
    set repayment.id = #{record.id,jdbcType=BIGINT},
      repayment.product_id = #{record.productId,jdbcType=INTEGER},
      repayment.user_id = #{record.userId,jdbcType=BIGINT},
      repayment.borrow_cash_id = #{record.borrowCashId,jdbcType=BIGINT},
      repayment.repay_no = #{record.repayNo,jdbcType=VARCHAR},
      repayment.repay_type = #{record.repayType,jdbcType=TINYINT},
      repayment.repay_state = #{record.repayState,jdbcType=TINYINT},
      repayment.repay_amount = #{record.repayAmount,jdbcType=BIGINT},
      repayment.repay_actual_amount = #{record.repayActualAmount,jdbcType=BIGINT},
      repayment.repay_overdue_amount = #{record.repayOverdueAmount,jdbcType=BIGINT},
      repayment.repay_rate_amount = #{record.repayRateAmount,jdbcType=BIGINT},
      repayment.unpaid_amount = #{record.unpaidAmount,jdbcType=BIGINT},
      repayment.rebate_amount = #{record.rebateAmount,jdbcType=BIGINT},
      repayment.ups_order_no = #{record.upsOrderNo,jdbcType=VARCHAR},
      repayment.ups_third_order_no = #{record.upsThirdOrderNo,jdbcType=VARCHAR},
      repayment.gmt_ups_req = #{record.gmtUpsReq,jdbcType=TIMESTAMP},
      repayment.gmt_ups_finish = #{record.gmtUpsFinish,jdbcType=TIMESTAMP},
      repayment.account_type = #{record.accountType,jdbcType=TINYINT},
      repayment.account_name = #{record.accountName,jdbcType=VARCHAR},
      repayment.account_no = #{record.accountNo,jdbcType=VARCHAR},
      repayment.account_no_md5 = #{record.accountNoMd5,jdbcType=VARCHAR},
      repayment.coupon_id = #{record.couponId,jdbcType=BIGINT},
      repayment.coupon_amount = #{record.couponAmount,jdbcType=BIGINT},
      repayment.fail_reason = #{record.failReason,jdbcType=VARCHAR},
      repayment.remark = #{record.remark,jdbcType=VARCHAR},
      repayment.data_version = #{record.dataVersion,jdbcType=INTEGER},
      repayment.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      repayment.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      repayment.is_delete = #{record.isDelete,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duobei.core.transaction.repayment.domain.BorrowCashRepayment">
    update tt_borrow_cash_repayment
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="borrowCashId != null">
        borrow_cash_id = #{borrowCashId,jdbcType=BIGINT},
      </if>
      <if test="repayNo != null">
        repay_no = #{repayNo,jdbcType=VARCHAR},
      </if>
      <if test="repayType != null">
        repay_type = #{repayType,jdbcType=TINYINT},
      </if>
      <if test="repayState != null">
        repay_state = #{repayState,jdbcType=TINYINT},
      </if>
      <if test="repayAmount != null">
        repay_amount = #{repayAmount,jdbcType=BIGINT},
      </if>
      <if test="repayActualAmount != null">
        repay_actual_amount = #{repayActualAmount,jdbcType=BIGINT},
      </if>
      <if test="repayOverdueAmount != null">
        repay_overdue_amount = #{repayOverdueAmount,jdbcType=BIGINT},
      </if>
      <if test="repayRateAmount != null">
        repay_rate_amount = #{repayRateAmount,jdbcType=BIGINT},
      </if>
      <if test="unpaidAmount != null">
        unpaid_amount = #{unpaidAmount,jdbcType=BIGINT},
      </if>
      <if test="rebateAmount != null">
        rebate_amount = #{rebateAmount,jdbcType=BIGINT},
      </if>
      <if test="upsOrderNo != null">
        ups_order_no = #{upsOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="upsThirdOrderNo != null">
        ups_third_order_no = #{upsThirdOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="gmtUpsReq != null">
        gmt_ups_req = #{gmtUpsReq,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpsFinish != null">
        gmt_ups_finish = #{gmtUpsFinish,jdbcType=TIMESTAMP},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=TINYINT},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountNo != null">
        account_no = #{accountNo,jdbcType=VARCHAR},
      </if>
      <if test="accountNoMd5 != null">
        account_no_md5 = #{accountNoMd5,jdbcType=VARCHAR},
      </if>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=BIGINT},
      </if>
      <if test="couponAmount != null">
        coupon_amount = #{couponAmount,jdbcType=BIGINT},
      </if>
      <if test="failReason != null">
        fail_reason = #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dataVersion != null">
        data_version = #{dataVersion,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duobei.core.transaction.repayment.domain.BorrowCashRepayment">
    update tt_borrow_cash_repayment
    set product_id = #{productId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      borrow_cash_id = #{borrowCashId,jdbcType=BIGINT},
      repay_no = #{repayNo,jdbcType=VARCHAR},
      repay_type = #{repayType,jdbcType=TINYINT},
      repay_state = #{repayState,jdbcType=TINYINT},
      repay_amount = #{repayAmount,jdbcType=BIGINT},
      repay_actual_amount = #{repayActualAmount,jdbcType=BIGINT},
      repay_overdue_amount = #{repayOverdueAmount,jdbcType=BIGINT},
      repay_rate_amount = #{repayRateAmount,jdbcType=BIGINT},
      unpaid_amount = #{unpaidAmount,jdbcType=BIGINT},
      rebate_amount = #{rebateAmount,jdbcType=BIGINT},
      ups_order_no = #{upsOrderNo,jdbcType=VARCHAR},
      ups_third_order_no = #{upsThirdOrderNo,jdbcType=VARCHAR},
      gmt_ups_req = #{gmtUpsReq,jdbcType=TIMESTAMP},
      gmt_ups_finish = #{gmtUpsFinish,jdbcType=TIMESTAMP},
      account_type = #{accountType,jdbcType=TINYINT},
      account_name = #{accountName,jdbcType=VARCHAR},
      account_no = #{accountNo,jdbcType=VARCHAR},
      account_no_md5 = #{accountNoMd5,jdbcType=VARCHAR},
      coupon_id = #{couponId,jdbcType=BIGINT},
      coupon_amount = #{couponAmount,jdbcType=BIGINT},
      fail_reason = #{failReason,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      data_version = #{dataVersion,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>