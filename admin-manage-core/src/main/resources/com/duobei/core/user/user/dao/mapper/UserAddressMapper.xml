<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duobei.core.user.user.dao.mapper.UserAddressMapper">
  <resultMap id="BaseResultMap" type="com.duobei.core.user.user.domain.UserAddress">
    <id column="user_address_id" jdbcType="BIGINT" property="id" />
    <result column="user_address_product_id" jdbcType="INTEGER" property="productId" />
    <result column="user_address_user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_address_consignee" jdbcType="VARCHAR" property="consignee" />
    <result column="user_address_consignee_mobile" jdbcType="VARCHAR" property="consigneeMobile" />
    <result column="user_address_province" jdbcType="VARCHAR" property="province" />
    <result column="user_address_city" jdbcType="VARCHAR" property="city" />
    <result column="user_address_region" jdbcType="VARCHAR" property="region" />
    <result column="user_address_street" jdbcType="VARCHAR" property="street" />
    <result column="user_address_detail_address" jdbcType="VARCHAR" property="detailAddress" />
    <result column="user_address_is_default" jdbcType="BIT" property="isDefault" />
    <result column="user_address_add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="user_address_modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="user_address_is_delete" jdbcType="BIGINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_address.id as user_address_id, user_address.product_id as user_address_product_id, 
    user_address.user_id as user_address_user_id, user_address.consignee as user_address_consignee, 
    user_address.consignee_mobile as user_address_consignee_mobile, user_address.province as user_address_province, 
    user_address.city as user_address_city, user_address.region as user_address_region, 
    user_address.street as user_address_street, user_address.detail_address as user_address_detail_address, 
    user_address.is_default as user_address_is_default, user_address.add_time as user_address_add_time, 
    user_address.modify_time as user_address_modify_time, user_address.is_delete as user_address_is_delete
  </sql>
  <select id="selectByExample" parameterType="com.duobei.core.user.user.domain.UserAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pgy_user_address user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pgy_user_address user_address
    where user_address.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pgy_user_address
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duobei.core.user.user.domain.UserAddressExample">
    delete from pgy_user_address user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duobei.core.user.user.domain.UserAddress">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pgy_user_address (product_id, user_id, consignee, 
      consignee_mobile, province, city, 
      region, street, detail_address, 
      is_default, add_time, modify_time, 
      is_delete)
    values (#{productId,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{consignee,jdbcType=VARCHAR}, 
      #{consigneeMobile,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{region,jdbcType=VARCHAR}, #{street,jdbcType=VARCHAR}, #{detailAddress,jdbcType=VARCHAR}, 
      #{isDefault,jdbcType=BIT}, #{addTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.duobei.core.user.user.domain.UserAddress">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pgy_user_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="consignee != null">
        consignee,
      </if>
      <if test="consigneeMobile != null">
        consignee_mobile,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="street != null">
        street,
      </if>
      <if test="detailAddress != null">
        detail_address,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="consignee != null">
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="consigneeMobile != null">
        #{consigneeMobile,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="street != null">
        #{street,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null">
        #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duobei.core.user.user.domain.UserAddressExample" resultType="java.lang.Long">
    select count(*) from pgy_user_address user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pgy_user_address user_address
    <set>
      <if test="record.id != null">
        user_address.id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        user_address.product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_address.user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.consignee != null">
        user_address.consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneeMobile != null">
        user_address.consignee_mobile = #{record.consigneeMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        user_address.province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        user_address.city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        user_address.region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.street != null">
        user_address.street = #{record.street,jdbcType=VARCHAR},
      </if>
      <if test="record.detailAddress != null">
        user_address.detail_address = #{record.detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null">
        user_address.is_default = #{record.isDefault,jdbcType=BIT},
      </if>
      <if test="record.addTime != null">
        user_address.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        user_address.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        user_address.is_delete = #{record.isDelete,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pgy_user_address user_address
    set user_address.id = #{record.id,jdbcType=BIGINT},
      user_address.product_id = #{record.productId,jdbcType=INTEGER},
      user_address.user_id = #{record.userId,jdbcType=BIGINT},
      user_address.consignee = #{record.consignee,jdbcType=VARCHAR},
      user_address.consignee_mobile = #{record.consigneeMobile,jdbcType=VARCHAR},
      user_address.province = #{record.province,jdbcType=VARCHAR},
      user_address.city = #{record.city,jdbcType=VARCHAR},
      user_address.region = #{record.region,jdbcType=VARCHAR},
      user_address.street = #{record.street,jdbcType=VARCHAR},
      user_address.detail_address = #{record.detailAddress,jdbcType=VARCHAR},
      user_address.is_default = #{record.isDefault,jdbcType=BIT},
      user_address.add_time = #{record.addTime,jdbcType=TIMESTAMP},
      user_address.modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      user_address.is_delete = #{record.isDelete,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duobei.core.user.user.domain.UserAddress">
    update pgy_user_address
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="consignee != null">
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="consigneeMobile != null">
        consignee_mobile = #{consigneeMobile,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="street != null">
        street = #{street,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null">
        detail_address = #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duobei.core.user.user.domain.UserAddress">
    update pgy_user_address
    set product_id = #{productId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      consignee = #{consignee,jdbcType=VARCHAR},
      consignee_mobile = #{consigneeMobile,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      street = #{street,jdbcType=VARCHAR},
      detail_address = #{detailAddress,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=BIT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>